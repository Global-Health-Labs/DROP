{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Project Introduction","text":""},{"location":"#overview","title":"Overview","text":"<p>The Diagnostic Robotic Optimization Platform (DROP) was developed by GH Labs to support high throughput development of diagnostic chemistries, with an initial focus on Lateral Flow Assays (LFAs) and Nucleic Acid Amplification Tests (NAATs). The scope of this work includes: </p> <ul> <li>Development and validation of robotic platforms for the optimization of lateral flow assay and nucleic acid amplification chemistries. </li> <li>Application of the high-throughput screening platform to identify top performing antibodies for LFAs in multiple disease areas. </li> <li>Demonstration of utility of Design of Experiments (DoE) for NAAT development. </li> <li>Technology transfer to partners in India and the UK. </li> </ul>"},{"location":"#the-why","title":"The Why","text":"<p>Assay development can be a largely manual process that requires a large amount of hands-on time from highly trained laboratory personnel. The DROP system uses an automated liquid handling robot to support assay development efforts. The benefits of such a system include: </p> <ul> <li>Accelerate Timelines - reduces both total development time and total hands-on time required</li> <li>Improve Scalability - enables performance of large scale experiments without the limitation of manual handling</li> <li>Enhance Reproducibility - Automation minimizes variability, ensuring greater accuracy and consistency </li> </ul> <p>Applications of this system can include, but are not limited to: </p> <p> Figure 1. Potential application areas for the DROP system. All of these categories can apply to both NAAT and LFA technologies. </p>"},{"location":"#the-how","title":"The How","text":"<p>Included on this site is everything required to implement the DROP system for both the roboNAAT and roboLFA modules.This includes (1) custom hardware, (2) custom software for experimental design and data analysis, and (3) protocols. Additional support in the form of a troubleshooting guide and glossary can be found under the Project Overview tab. </p> <p>Running an experiment using the DROP system requires the use of a number of tools specifically designed for this purpose. For both LFA and NAAT, the workflow is similar, and includes:</p> <ul> <li>Planning the experiment </li> <li>Making the experiment files</li> <li>Running the experiment files in simulation</li> <li>Running the experiment (for real this time)</li> <li>Getting and analyzing the data</li> <li>Repeating as needed</li> </ul> <p>RoboLFA is the DROP module that was designed to run LFA chemistries on the Hamilton STAR. This system has been used primarily for the selection and optimization of antibody pairs for a traditional LFA antibody stack. Additional applicaitons include optimization of membrane materials, blocking and running buffers, drying and spraying conditions, and conjugate chemistry. More about this module can be found in the RoboLFA tab above. </p> <p> Figure 2. Flow chart describing use of DROP system for LFA applications. </p> <p>RoboNAAT is the DROP module that was designed to run NAAT on the Hamilton STAR. This module has been used for the optimization and characterization of various nucleic acid amplification chemistries, including polymerase chain reaction (PCR), loop-mediated isothermal amplification (LAMP) and recombinase polymerase amplification (RPA). </p> <p> Figure 3. Flow chart describing use of DROP system for NAAT applications. </p>"},{"location":"#conclusions-and-next-steps","title":"Conclusions and Next Steps","text":"<ul> <li>RoboNAAT and RoboLFA designs locked and available on Github</li> <li>RADA web application for simplified use of Hamilton STAR completed and available for deployment</li> <li>Technology has been transferred to partners in India and the UK</li> <li>Continued development is needed in the following areas:<ul> <li>Application of DROP in India to accelerate bringing diagnostic products to market</li> <li>Experimental design for NAAT experiments \u2013 finding optimal DOE for different amplification chemistries </li> <li>Integration with fluorescence readout to enable non-colorimetric readout for protein or nucleic acid-based assays </li> </ul> </li> </ul>"},{"location":"DROP%20Master%20Protocol/","title":"DROP Master Protocol","text":"<p>The DROP workflow (diagrammed in Figure 1 below) includes experimental design, experiment setup, experiment validation, running the experiment, and data analysis. This document specifically covers the procedures for Steps 3 and 4: experiment validation and running the experiment. Additional information about assay specific experimental design, setup, and data analysis can be found in their respective pages under RoboNAAT and RoboLFA. </p> <p> Figure 1. High level overview of the DROP workflow. This workflow includes (1) Experimental design (2) Experiment setup (3) Experiment validation (4) Running an experiment and (5) Data analysis. In most applications, futher iteration would continue until product criteria are met.  </p>"},{"location":"DROP%20Master%20Protocol/#experiment-preparation","title":"Experiment preparation","text":"<p>Before running an experiment, it is recommended to complete the Daily Maintenence provided with the Hamilton system. Launch the Instrument Maintenence Program and follow the step by step instructions provided. </p> <p>NAAT applications are highly sensitive to contamination, therefore it is recommended to UV treat the hood for a minimum of 10 minutes before working with a potentially sensitive molecular assay. </p>"},{"location":"DROP%20Master%20Protocol/#experiment-confirmation","title":"Experiment confirmation","text":"<ol> <li>Launch VENUS software </li> <li>Run Worklist in simulation mode </li> </ol> <p>Note</p> <p>A worklist is generated using the Robotic Assay Development Application (RADA) or through manual methods. An explanation on how to make a worklist using either method can be found in the RADA tab. </p> <p>All worklists must first be run in simulation mode to identify any potential problems before running the actual experiment. Use simulation mode to do the following:  \u2022   Verify run by watching the deck layout. \u2022   Optional: verify run using the trace file. \u2022   Optional and recommended: add animation in the method. The animation provides realistic virtual x, y, z visualization.</p>"},{"location":"DROP%20Master%20Protocol/#step-0-equipment-set-up","title":"Step 0: Equipment set up","text":"<p>DROP is an add on to a Hamilton STAR system that consists of hardware, software, and protocols specific to this work. Other Hamilton systems could be used with some modifications to the Method/Layout files and LFA hardware. </p> <p> Figure 2. Image of Hamilton STAR, base of the DROP system, with specific add ons required for the build. This includes type of pipette head (other options are 96 and 384 head, which work well for plate applications but are not flexible enough for LFA applications), VENUS software, tip and plate carriers, and on board camera. NAAT applications also require a HEPA filter and UV hood to reduce the risk of contamination. </p> <p>Additional capabilities recommended:</p> <p>LFA applications -</p> <ul> <li>Lateral flow assay preparation and assembly </li> <li>3D printing (internal or outsourced) to make LFA strip holders </li> <li>Laser cutting (internal or outsourced) to make LFA cassette holders </li> </ul> <p>NAAT applications -</p> <ul> <li>PCR hood for clean reagent preparation </li> <li>Gel capabilities </li> </ul> <p>After setting up the equipment described above, the software specific to the DROP system must be installed. More detail instructions for installation can be found under \"DROP Installation\". </p>"},{"location":"DROP%20Master%20Protocol/#step-1-experimental-design","title":"Step 1: Experimental Design","text":"<p>Experimental design for LFAs and NAATs can take many forms. One of the major benefits of an automated liquid handling system is the ability to run large experiments with high reproducibility. Therefore, Design of Experiments (DoE) has been used as an approach to characterize and/or optimize different diagnostic chemistries in the most efficient and informative way possible. Some of our favorite approaches for DoE are:</p> <ul> <li>Full factorial design to determine the best antibody pairs for a given antigen target </li> <li>Taguchi design for PCR optimization </li> </ul> <p>More detail on each of these can be found in the respective roboLFA and roboNAAT Modules. </p> <p> Figure 3. Graphical representation of experimental designs for a 3-dimensional experimental space. Image from Prism UK.  </p>"},{"location":"DROP%20Master%20Protocol/#step-2-experiment-setup","title":"Step 2: Experiment Setup","text":"<p>Experiment setup includes preparation of the required materials to run the experiment as well as the worklist. </p> <ul> <li>For LFA experiments, this can include making antibody conjugates and preparing LFA membranes</li> <li>For NAAT experiments, this can include primer design and identification of the appropriate reagents and controls </li> </ul> <p>With this information, as well as the inputs from the Experimental Design step, a worklist with the step by step commands for the robot can be made. There are a few different ways to make a worklist, but we will mostly discuss the use of an AWS Web Application termed the Robotic Assay Development Application (RADA) designed for an improved user experience. </p>"},{"location":"DROP%20Master%20Protocol/#step-3-experiment-validation","title":"Step 3: Experiment Validation","text":"<p>Validation of a given experiment or protocol is even more important when working with an automated liquid handling system. Not only are there more things that can go wrong, but the potential impact of an error is much higher when operating with much larger experiments. For the DROP system, experiment validation includes:</p> <ul> <li>Testing the worklist in simulation to identify errors on the software/robotics side</li> <li>Testing the experiment with a subset of the final conditions to identify error modes that may impact outcome </li> </ul> <p>A full experiment should not be run if there are errors that occur in either of these two categories. </p>"},{"location":"DROP%20Master%20Protocol/#step-4-run-experiment","title":"Step 4: Run Experiment","text":"<p>This step is exactly what it sounds like, run the experiment that has been designed and validated. Something to be mindful of is that there are efforts on the DROP system can span multiple robot runs. </p>"},{"location":"DROP%20Master%20Protocol/#step-5-data-analysis","title":"Step 5: Data Analysis","text":"<p>Included in the DROP system are two data analysis tools, one for analyzing LFA images taken on the Hamilton STAR and one for analyzing raw NAAT data from a thermocycler. Both tools utilize Jupyter Notebook and Python. More information about each tool can be found in their respective platform tabs (roboLFA and roboNAAT). </p>"},{"location":"DROP%20Master%20Protocol/#step-6-iterate","title":"Step 6: Iterate","text":"<p>As needed.</p>"},{"location":"DROP_quickstart/","title":"Quick Start Guide","text":""},{"location":"DROP_quickstart/#step-0-equipment-set-up","title":"Step 0: Equipment set up","text":"<p>DROP is an add on to a Hamilton STAR system that consists of hardware, software, and protocols specific to this work. Other Hamilton systems could be used with some modifications to the Method/Layout files and LFA hardware. </p> <p> Figure 1. Image of Hamilton STAR with specific add ons required for DROP. This includes 8 individual pipetting channels (other options are 96 and 384 head, which work well for plate applications but are not flexible enough for LFA applications), VENUS software, tip and plate carriers, and on board camera. NAAT applications also require a HEPA filter and UV light to reduce the risk of contamination. </p> <p>Additional recommended capabilities:</p> <p>LFA applications -</p> <ul> <li>Lateral flow strip preparation and assembly </li> <li>3D printing (internal or outsourced) to make LFA strip holders </li> <li>Laser cutting (internal or outsourced) to make LFA cassette holders </li> </ul> <p>NAAT applications -</p> <ul> <li>PCR hood for clean reagent preparation </li> <li>Gel capabilities </li> <li>Thermocyclers </li> </ul> <p>After setting up the Hamilton STAR and ancillary equipment, the software specific to the DROP system must be installed. More detail instructions for installation can be found under \"DROP Installation\". </p>"},{"location":"DROP_quickstart/#step-1-experimental-design","title":"Step 1: Experimental Design","text":"<p>Experimental design for LFAs and NAATs can take many forms. One of the major benefits of an automated liquid handling system is the ability to run large experiments with high reproducibility. Therefore, Design of Experiments (DoE) has been used as an approach to characterize and/or optimize different diagnostic chemistries in the most efficient and informative way possible. Some of our favorite approaches for DoE are:</p> <ul> <li>Full factorial design to determine the best antibody pairs for a given antigen target </li> <li>Taguchi design for PCR optimization </li> </ul> <p>More detail on each of these can be found in the respective RoboLFA and RoboNAAT Modules. </p> <p> Figure 2. Graphical representation of experimental designs for a 3-dimensional experimental space. Image from Prism UK.  </p>"},{"location":"DROP_quickstart/#step-2-experiment-setup","title":"Step 2: Experiment Setup","text":"<p>Experiment setup includes preparation of the required materials to run the experiment as well as the worklist. </p> <ul> <li>For LFA experiments, this can include making antibody conjugates and preparing LFA membranes</li> <li>For NAAT experiments, this can include primer design and identification of the appropriate reagents and controls </li> </ul> <p>With this information, as well as the inputs from the Experimental Design step, a worklist with the step by step commands for the robot can be made. There are a few different ways to make a worklist, but we will mostly discuss the use of an AWS Web Application termed the Robotic Assay Development Application (RADA) designed for an improved user experience. </p>"},{"location":"DROP_quickstart/#step-3-experiment-validation","title":"Step 3: Experiment Validation","text":"<p>Validation of a given experiment or protocol is even more important when working with an automated liquid handling system. Not only are there more things that can go wrong, but the potential impact of an error is much higher when operating with much larger experiments. For the DROP system, experiment validation includes:</p> <ul> <li>Testing the worklist in simulation to identify errors on the software/robotics side</li> <li>Testing the experiment with a subset of the final conditions to identify error modes that may impact outcome </li> </ul> <p>A full experiment should not be run if there are errors that occur in either of these two categories. </p>"},{"location":"DROP_quickstart/#step-4-run-experiment","title":"Step 4: Run Experiment","text":"<p>This step is exactly what it sounds like, run the experiment that has been designed and validated. Something to be mindful of is that there are efforts on the DROP system that can span multiple robot runs. </p>"},{"location":"DROP_quickstart/#step-5-data-analysis","title":"Step 5: Data Analysis","text":"<p>The DROP system includes two data analysis tools, one designed for analyzing LFA images captured using the Hamilton STAR and one for analyzing raw NAAT data from a thermocycler. Both tools utilize Jupyter Notebook and Python. More information about each tool can be found in their respective platform tabs (roboLFA and roboNAAT). </p>"},{"location":"DROP_quickstart/#step-6-iterate","title":"Step 6: Iterate","text":"<p>As needed.</p>"},{"location":"Installation%20Instructions/","title":"DROP Installation","text":""},{"location":"Installation%20Instructions/#preparing-for-installation","title":"Preparing for installation","text":"<ol> <li>Installation requirements for simulation only: <ul> <li>Windows OS (DROP has not been verified with Mac OS)</li> <li>Admin access</li> <li>.NET framework 3.5 or higher. If not already installed on your machine, download from Microsoft here - link</li> <li>Microsoft excel or other software that can open and edit .csv files </li> </ul> </li> <li>Installation requirements for connection to Hamilton STAR <ul> <li>Refer to Hamilton Robotics or local Hamilton distributor </li> </ul> </li> </ol>"},{"location":"Installation%20Instructions/#files-required-for-installation","title":"Files required for installation","text":"<ul> <li>DROP Method and Layout Files <ul> <li> DROP LFA Package File (contains Method and Layout file)</li> <li> DROP LFA Package File (contains Method and Layout file)</li> </ul> </li> <li> DROP Liquid Classes </li> <li>Test Worklists <ul> <li> Test Mastermix Worklist </li> <li> Test sample worklist</li> <li> Test LFA cartridge worklist </li> <li> Test LFA strip worklist</li> </ul> </li> <li>Support packages<ul> <li> Shortcuts Import</li> <li> EasyPickII Library</li> </ul> </li> </ul>"},{"location":"Installation%20Instructions/#venus-installation","title":"VENUS installation","text":"<ol> <li>Download VENUS onto local machine. Also download the following supporting files that are required as described above.</li> <li>Run Venus.STAR.Installer.exe and follow the prompts. This step might take a while.<ul> <li>When you get to the \"Select Features\" window, make sure to select ALL features listed. If you skip this step, the final software will not be able to run the Method correctly.  Figure 1. Screenshot of VENUS software installation wizard. Select all features to ensure proper execution of the Method.  </li> </ul> </li> <li>Once installation is completed, open the VENUS software. </li> </ol>"},{"location":"Installation%20Instructions/#method-and-library-import","title":"Method and Library Import","text":"<ol> <li>Navigate to System Tools and click on Hamilton Method Editor.        Figure 2. User view of System Tools. Important locations to note for installation are the Method Editor and Liquid Class Editor in the top row.  </li> <li>Load following package files one at a time. Make sure they are saved locally onto the machine. <ul> <li>DROP_NAAT.pkg</li> <li>DROP_LFA.pkg</li> <li>STAR_Animations V1.6.0 200416.pkg </li> </ul> </li> <li>Select \"Import\" in the Hamilton Method Editor. Make sure to select Import Method/Library/Workflow. Select the \"...\" and navigate to the .pkg file you are installing. Select \"Next\".   Figure 3. Pop up in Hamilton Method Editor to Import a Method file. Make sure that Import Method / Library / Workflow are selected.  </li> <li>Select \"Import into Default Directories\". Once selected, click \"Next\".   Figure 4. Instructions for importing a new Method into the Hamilton Method editor. It is recommended to select \"Import into Default Directories\" as the best option.  </li> <li> <p>The package file will be imported. There might be a popup that says that the file already exists and that the existing file is newer than the file in the package. If you get this pop up, select the option \"No to all\".   Figure 5. Screen while the Method is being imported by the Method Editor.   Figure 6. Pop up that may occur when importing a Method in the Method Editor. It is recommended to select \"no to all\" if the existing file is newer than the file in the package.   Figure 7. Completed import of a Method in the Method Editor.  </p> </li> <li> <p>Repeat steps 6-8 for all three package files that need to be imported.</p> </li> <li>Install easyPickII Application. Ensure that the version of the easyPickII Application is V1.3.2 or newer. This application is required for the function of the camera. <ul> <li>Navigate to the easyPickII Application folder and double click on easypickii.exe.</li> <li>Follow the instructions to install the application.</li> </ul> </li> </ol>"},{"location":"Installation%20Instructions/#import-liquid-classes","title":"Import Liquid Classes","text":"<ol> <li>To load the liquid classes required to run the DROP system, navigate back to System Tools in the VENUS software. In System Tools, select the Liquid Class Editor.   Figure 8. View of the Hamilton CO-RE Liquid Editor. This contains all the liquid classes that are imported as well as all default Hamilton liquid classes.  </li> <li>Under \"File\", select \"Import Liquid Classes\".   Figure 9. User view in the Liquid class editor to import liquid classes.   </li> <li> <p>Select the file DROP_Liquid_Classes.mdb when prompted to Open File. The liquid classes in the file will load on the left hand side under \"Available liquid classes\". Select \"Add all\" to move them into the \"Selected liquid classes\" column. Then select \"OK\".  Figure 10. User view of the liquid class import page at the start.  </p> <p>  Figure 11. User view of the liquid class import page once the .mdb file has been loaded into the \"Import from\" bar.  </p> <p>  Figure 12. User view of the liquid class import page once all of the liquid classes have been selected to be imported.  </p> </li> <li> <p>Once complete, the new liquid classes can be found in the list of Liquid classes. Verify that is the case and close the Hamilton CO-RE Liquid Editor.  </p> </li> </ol>"},{"location":"Installation%20Instructions/#import-shortcuts","title":"Import shortcuts","text":"<ol> <li> <p>Import the shortcuts by navigating to the Settings in the VENUS 6 software. Select the \"Shortcuts\" tab on the upper bar. Select the three lines on the far right. </p> <p>  Figure 13. User view to import shortcuts into VENUS 6.  </p> </li> <li> <p>Select Import Items and load the VENUS-Export-Shortcuts.zip file. Once loaded, all of the shortcuts will show up in their respective groupings. Select \"Import\" and the software will begin importing the selected package(s). </p> <p>  Figure 14. User view when shortcuts have been loaded for import.  </p> </li> <li> <p>Once completed, a pop up window will appear stating \"Import Shortcut Complete\" with the number of successful imports. </p> </li> </ol>"},{"location":"Installation%20Instructions/#testing-installation","title":"Testing installation","text":"<ol> <li>To test that the installation was successful, open the VENUS Software. </li> <li>Navigate to the Shortcuts bar on the Home page. Select the \"...\" to the right of the \"NAAT Assay Development\" Shortcut. </li> <li>Select \"Simulate Method\".</li> <li>Load one of the test worklists into the pop up. Keep \"Animation\" selected. Click \"ok\". <ul> <li>For this test use Test_mastermix_worklist.csv</li> </ul> </li> <li>Load tips onto the virtual deck.</li> <li>Allow the method to run. Take note of any errors that happen. You can refer to the \"Common Errors\" tab for assistance. </li> </ol>"},{"location":"authors/","title":"Contributors","text":""},{"location":"authors/#global-health-labs","title":"Global Health Labs","text":"<ul> <li>Caitlin Anderson </li> <li>Luis Alonzo </li> <li>Toan Hunyh </li> <li>Josh Bishop </li> <li>Jason Cantera </li> <li>Dan Shea </li> <li>Anne-Laure Le Ny </li> <li>Jamie Purcell </li> <li>Bernhard Weigl </li> <li>Putthida Samrith </li> </ul>"},{"location":"authors/#neurosynaptic-communicationsappzoy","title":"Neurosynaptic Communications/Appzoy","text":"<ul> <li>Shyam Prakash shyam.p@appzoy.com</li> <li>Rajeev Kumar rajeev@neurosynaptic.com</li> <li>Rahul Sadafule rahul@appzoy.com</li> <li>Sameer Sawarkar sameer.s@neurosynaptic.com</li> </ul>"},{"location":"glossary/","title":"Glossary","text":""},{"location":"glossary/#definitions","title":"Definitions","text":"<p>There is a lot of jargon associated with the DROP system. The definitions are grouped into sections based on the time of need, including general use, working with worklists, etc. </p>"},{"location":"glossary/#abbreviations","title":"Abbreviations","text":"Term Definition <code>NAAT</code> Nucleic Acid Amplification Test <code>LFA</code> Lateral Flow Assay <code>DROP</code> Diagostic Robotic Optimization Platform <code>AWS</code> Amazon Web Services <code>RADA</code> Robotic Assay Development Application <code>RPA</code> Recombinase Polymerase Amplification <code>LAMP</code> Loop-mediated Isothermal Amplification <code>PCR</code> Polymerase Chain Reaction <code>DW</code> Deep well plates <code>NTR</code> Nesting tip racks <code>RDT</code> Rapid diagnsotic test"},{"location":"glossary/#general-definitions","title":"General definitions","text":"Term Definition <code>worklist</code> The worklist is a .csv file that is input into the Hamilton Run Control to the robot what actions to follow and in what order. The file containing the worklist must end with \u2018worklist.csv\u2019 otherwise the Hamilton software will not recognize it. The file containing the worklist must end with worklist.csv; otherwise, the Hamilton software will not recognize it. The file must be a plain .csv file (not a UTF-8 or any other csv version). A worklist can be made manually or by coding. For LFA optimization work, we have python-based code called the \u201cRobot Worklist Generator\u201d. The worklist is composed of 21 columns (two of which are optional) and infinite rows. The identity and definition of each of these columns is described in Section 8. The order of the columns does not matter. <code>Method</code> A Hamilton specific piece of software that has been designed to carry out an experiment. Methods can be simple (always pipette a known volume between known locations) or complex (insert a .csv file with a range of different commands that can pipette any volume within reason between any location available on the deck). <code>Deck</code> The area on the robot where things happen. It includes where the pipette tips are stored, where plates can be placed, and even includes the waste area. <code>Stock plate(s)</code> Plates that have all stock reagents required for the experiment. Typically, we can use the stock plates as the location to prepare and mix the mastermix as well. <code>Assay plate(s)</code> Plates where the mastermix and sample (or just template) are added. We have spots on the deck for both 96 well and 384 well PCR plates. A flat bottom plate can also be used as an \"assay plate\", depending on the application. <code>Liquid Class(es)</code> A liquid class is built to pipette a given liquid, and has information around aspiration speeds, dispense speeds, blowout volumes, air transports, etc and a calibration curve. We have liquid classes developed for a range of liquids, and more can be made as needed. This requires one of our LVK trained lab staff to assist."},{"location":"glossary/#worklist-column-definitions","title":"Worklist column definitions","text":"Term Definition <code>step</code> A text string to describe what the step is (e.g. conjugate addition, sample addition, buffer addition, imaging) <code>volume_uL</code> Volume to be pipetted. Must be smaller than the volume associated with the liquid class (50, 300, or 1000 depending). If volume is set to 0, the robot will take a picture instead of pipetting. <code>liquid_class</code> Liquid class associated with the liquid to be pipetted. These classes have been designed specifically for the liquids that we pipette and the volumes we plan to use. There is a list of possible liquid classes found in the CO-RE liquid editor. The specific liquid classes designed for LFAs can be found in the LFA documentation. <code>tip_type</code> This value is associated with the liquid class selected and the volume to be pipetted. This value will be either 50, 300, or 1000. This value needs to be larger than the volume to be pipetted. <code>dispense_type</code> Two dispense types, \"Surface_Empty\" and \"Jet_Empty\" are used. Surface_Empty goes to the tip of the liquid, detected using a capacitive measurement, and dispenses 2mm below that height. This feature struggles when there are bubbles at the top of a liquid. Jet_Empty goes inside the well and dispenses at a set height above the bottom of the well plate. Jet_Empty tends to be accurate at faster speeds than Surface Empty. <code>asp_mixing</code> Programs the number of mixing cycles performed after a dispense step. This value needs to be the same value for an entire group. This feature only works for Surface_Empty liquid classes. <code>source</code> The name of the liquid that is being pipetted. By using specific descriptors, source can be useful for the user when designing the worklist. <code>group_number</code> The \"group\" classification is an important one. Each group needs to be from the same tip_type (50, 300, 1000). The group number is used by the robot to control the order and timing of pipetting steps. It is recommended to keep groups of 8 rows if you want to control the order in which the robot completes each step. Note: if one item in a group has mixing step, for example, then all items in that group will be mixed. However, using too many groups will make the method too slow. Therefore, group numbers need to be assigned wisely. <code>timer_delta</code> If the assay has time dependent steps, a value to program a time delay between the step and the next (associated) step, defined in timer_group_check. The value here is in seconds. <code>timer_group_check</code> This value will tell the program which step from which the time should refer to, in seconds. For example, if you wanted group 3 to occur 10 minutes after group 1 is complete, then your group_number=3, timer_group_check=1, and timer_delta (for group 1) = 600. <code>touchoff_dis</code> Used to change the distance vertically that the pipette tip moves up after touching a surface before dispensing.  Set value to -1 when not in use. <code>to plate</code> The ID of the plate pipetting step is going to. For most cases, there are more than one of each type of plate on the deck, indicated by the number at the end of the to_plate ID. Plates used in LFA applications are the following: TABLE INSIDE TABLE? <code>to_well</code> Where pipetting step is going to. The ID ranges from 1-96 for 96 well plates, and 1-384 for 384 well plates. Independent of plate size, the numbering is always top to bottom, left to right. Examples of the layout for each plate type are shown below. <code>from_plate</code> Plate ID where pipetting step is coming from. See to_plate above for more information about plate IDs. <code>from_well</code> Well ID where pipetting step is coming from. See to_well above to see more information about well IDs. <code>step_index</code> This does not matter. Set value to 0. <code>destination</code> This value can be used to name the destination location, which can be useful when making the worklist. Not required by Hamilton software and can be set to default value of 0 if desired. <code>guid</code> ID number associated with that specific well or LFA. guid is used for tracking when multiple steps are associated with one assay or assay type. <code>from_path</code> String value used to track events. Currently not integrated into workflow. Recommend setting to default value, which is \u201csome path\u201d and use other columns to do so instead. <code>dx</code> Denotes pipetting location in the x-axis. Origin (0,0) coordinates are hardware dependent, but generally located in the bottom left side of the geometry. Need to be manually verified prior to use. <code>dz</code> Denotes pipetting location in the z-direction. This value is hardware and instrument dependent. Needs to be manually verified prior to use."},{"location":"Common%20Errors/Camera%20Errors/","title":"Camera Errors","text":""},{"location":"Common%20Errors/Camera%20Errors/#incorrect-library","title":"Incorrect library","text":"<ul> <li>Problem: If the system does not have the correct library for the camera installed, the method will not be able to communicate with the camera to initialize, take, or save images. </li> <li>Error pop-up:  </li> <li>Logfile information: The LogFile error will include the following near the end of the LogFile </li> </ul> <p>SYSTEM : Execute method - error; An error occurred while running Vector.  The error description is: C:\\Program Files (x86)\\Hamilton\\Library\\easyPickIILibrary\\easyPickII_Library.hsl(303) : Invalid class string (0x23 - 0x2 - 0x39)  EasyPickII_Library : Trace - error; _Method::EASYPICKII::INIT::Init Initialisation failed! EasyPickII_Library : Trace - complete; _Method::EASYPICKII::SETTINGS::GetCameraSettingsNamesList( ...) EasyPickII_Library : Trace - error; _Method::EASYPICKII::SETTINGS::GetCameraSettingsNamesList The Application is not running!</p> <ul> <li>Solution: Install the correct EasyPickII library. For the system at C-CAMP, the library is V1.3.2 or newer. For the system installed at GH Labs, the library is XX. </li> </ul>"},{"location":"Common%20Errors/Camera%20Errors/#lack-of-space","title":"Lack of space","text":"<ul> <li>Problem: If the computer runs out of space, the system cannot save the photos that it takes. This problem happens occasionally because the image files are quite large. </li> <li>Error pop-up:  </li> <li>Logfile information: </li> <li>Solution: Establish data management system that enables long term storage/backup of images. </li> </ul>"},{"location":"Common%20Errors/LogFile/","title":"LogFile","text":"<p>So, you have had an error. Now what?  The LogFile automatically generated by the Hamilton software will become your best friend.  The LogFile is a file that is created every single time a worklist is run, whether it is run in simulation or on the instrument. All LogFiles can be found on the robot computer here - C:\\Program Files (x86)\\HAMILTON\\LogFiles. The file name will include the method that was run, and an alphanumeric value that is 32 characters long. An example is - RoboNAAT_Method_v3_10a7f1fb99e04a18936f6eb2fbc7e4c4_Trace. These files open in the Notepad app, which is already installed on both robot computers. </p> <p>There are a couple ways to tell if you have the correct log file, one is by looking for the most recent one (you can tell by what the date modified value is) assuming it was the most recent experiment run. Another is by opening the file and looking for the line that says \"fileWorklist =\". On the right side of the equation, the location and name of the worklist file loaded will be shown. This is another way to confirm you have the correct file. </p>"},{"location":"Common%20Errors/LogFile/#common-errors","title":"Common Errors","text":"Section Error Link <code>Worklist Error</code> Worklist file not found \ud83d\uddca <code>Worklist Error</code> CSV in incorrect format \ud83d\uddca <code>Worklist Error</code> Liquid class type mismatch \ud83d\uddca <code>Worklist Error</code> Volume outside of liquid class correction curve \ud83d\uddca <code>Worklist Error</code> Incorrect group numbering \ud83d\uddca <code>Worklist Error</code> Labware definitions incorrect for deck layout \ud83d\uddca <code>Pipette Error</code> Insufficient tips loaded (simulation or on instrument) \ud83d\udca7 <code>Pipette Error</code> No liquid detected \ud83d\udca7 <code>Pipette Error</code> Pipette does not reach bottom of labware \ud83d\udca7 <code>Pipette Error</code> Incorrect pipette tip assignment \ud83d\udca7 <code>Pipette Error</code> 50uL/300uL tips swapped \ud83d\udca7 <code>Pipette Error</code> Pipetting channel cannot reach location on deck \ud83d\udca7 <code>Camera Error</code> Camera unable to take or save images due to incorrect library \ud83d\udcf7 <code>Camera Error</code> Camera unable to take or save images due to lack of space on computer \ud83d\udcf7 <code>Miscellaneous Error</code> Configuration file gets corrupted \ud83d\udccd"},{"location":"Common%20Errors/Miscellaneous%20Errors/","title":"Miscellaneous Errors","text":""},{"location":"Common%20Errors/Miscellaneous%20Errors/#corrupted-cfg-file","title":"Corrupted .cfg file","text":"<ul> <li>Problem: The configuration (cfg) file was corrupted. This can be due to the system crashing (software or hardware). </li> <li> <p>Error pop-up:  </p> <ul> <li> <p>An error occured while running Vector. The error description is: Reached end-of-file while parsing a name, number, or similar token on line 1 in file C:\\Program Files(x86)\\HAMILTON\\Config\\ML_STAR.cfg (0x2 - 0x6 - 0x4). </p> </li> <li> <p>This error may also occur in the Hamilton Method Editor, in which case it would state \"Failed to analyze the file. The analyzed file contians HSL syntax errors\" with the same note about reached end-of-file. </p> </li> </ul> </li> <li> <p>Logfile information: NA</p> </li> <li>Solution: To fix this, the .cfg file needs to be reloaded with one that is not corrupted. Contact Hamilton representative for assistance if probelm persists. </li> </ul>"},{"location":"Common%20Errors/Pipette%20Errors/","title":"Pipette Errors","text":""},{"location":"Common%20Errors/Pipette%20Errors/#insufficient-tips","title":"Insufficient tips","text":"<ul> <li>Problem: Did not load enough tips onto deck (virtually) in either simulation or in instrument mode.</li> <li>Error pop-up:  An error occured while running Vector. The error description is C:\\Program Files(x86)\\Hamilton\\Library\\HSLMlStarStepReturnLib.hsl(401): _Method::StepReturn::GetErrorCode() The parameter is incorrect (0x0 - 0x0 - 0x1)</li> <li>Logfile information: The LogFile error will include the following near the end of the LogFile </li> </ul> <p>Microlab STAR : Main - error; An error occurred while running Vector.  The error description is: No more positions available in sequence seqTipFull. (0x28 - 0x2 - 0x80d)  Microlab STAR : 1000ul Channel Tip Pick Up (Single Step) - complete with error; An error occurred while running Vector.  The error description is: No more positions available in sequence seqTipFull. (0x28 - 0x2 - 0x80d)  USER : Trace - complete; Tip Pickup Return:  0  SYSTEM : Execute method - error; An error occurred while running Vector.  The error description is: C:\\Program Files (x86)\\Hamilton\\Library\\HSLMlStarStepReturnLib.hsl(401) : _Method::StepReturn::GetErrorCode() The parameter is incorrect. (0x0 - 0x0 - 0x1)</p> <ul> <li>Solution: Load more tips onto the deck. If there are not enough positions on that specific layout for the number of tips required to run the worklist, make an updated layout file with the correct number of pipette tip positions (in increments of 96). The sequence referenced can also include seqTipPartial if the sequence that does not have enough positions is a partial tip sequence. </li> </ul>"},{"location":"Common%20Errors/Pipette%20Errors/#no-liquid-detected","title":"No liquid detected","text":"<ul> <li>Problem: No liquid is detected when the pipette goes into the well to either aspirate or dispense. </li> <li>Error pop-up:  1000ul Channel Aspirate - Error &gt; Description: Liquid level not found. </li> <li>Logfile information: The LogFile error will include the following near the end of the LogFile </li> <li> <p>Solution: </p> <ul> <li>This problem can be fixed in a couple ways. If this is an error that should not appear at this step for any reason, look to see if previous pipetting steps delivered the correct volumes. An example would be if you had the wrong liquid class selected for a viscous liquid, causing the robot to pipette too little volume. This would lead a mastermix to have insufficient volume, which can be easily confirmed by looking at the volume of your viscous liquid remaining in the stock plate.   </li> <li>Typically, though, we see this error because the robot is looking for a liquid level higher than where it is. Therefore, fix this by selecting the \"Bottom\" button. Then click \"Execute\". This will send the pipette tip to the bottom of the well (and then raise up slightly to enable pipetting) instead of looking for the liquid level and bypass this issue. </li> </ul> </li> </ul>"},{"location":"Common%20Errors/Pipette%20Errors/#pipette-does-not-reach-labware-bottom","title":"Pipette does not reach labware bottom","text":"<ul> <li>Problem: Pipette tip doesn\u2019t reach the bottom of the labware, therefore requiring large amounts of dead volume in the well plates than what should be required. </li> <li>Error pop-up:  First sign of an error is typically that the volume pipetted is lower than programmed. Can be identified by visually watching how far into the well plate or onto the LFA that the pipette tip goes. </li> <li>Logfile information: NA</li> <li>Solution: Teach the position of the labware to the appropriate height. Contact GH Labs or IGB application specialist for support in teaching labware positions. </li> </ul>"},{"location":"Common%20Errors/Pipette%20Errors/#incorrect-pipette-tip-assignment","title":"Incorrect pipette tip assignment","text":"<ul> <li>Problem: The system is expecting a certain pipette tip, and a different one is in the identified location. </li> <li>Error pop-up:  If the issue is between 50 and 300 uL tips, then non error will pop up but the system will run assuming that it is using a tip with different dimensions (height) and may either crash or be unable to reach the liquid level. </li> <li>Logfile information: None if the issue happens with 50 and 300 uL tip. Will identify that it can not pick up the tip if it is between 50/300 and 1000 as their shoulder heights are different. </li> <li>Solution: Ensure that the tips loaded on the deck are the ones identified in the Hamilton Layout. Pictures of the deck layout or labels on the tip carriers can also reduce the likelihood of error. </li> </ul>"},{"location":"Common%20Errors/Pipette%20Errors/#tip-swap","title":"Tip swap","text":"<ul> <li>Problem: Tips are not in the correct position on the deck. </li> <li>Error pop-up:  For mixups between the 50 and 300uL tips the system cannot differentiate between them. The error that will happen is that the channel will act as though the tip is either much longer or much shorter than it is actually. </li> <li>Logfile information: NA</li> <li>Solution: Ensure that pipette tips are loaded in their exact locations as described in the layout file. </li> </ul>"},{"location":"Common%20Errors/Pipette%20Errors/#channel-cannot-reach-location","title":"Channel cannot reach location","text":"<ul> <li>Problem: Because the camera is installed in the DROP system, channels 1 and 2 cannot reach all locations on the deck. Specifically they are unable to reach the locations closest to the front of the machine.</li> <li>Error pop-up:  </li> <li>Logfile information: </li> <li>Solution: The deck design can be optimized to reduce the risk of this happening. This is also why most experiments that require the running of LFAs should be in groups of 8. </li> </ul>"},{"location":"Common%20Errors/Worklist%20Errors/","title":"Worklist Errors","text":""},{"location":"Common%20Errors/Worklist%20Errors/#worklist-file-not-found","title":"Worklist file not found","text":"<ul> <li>Problem: The desired worklist file is not found by the Hamilton software in the folder where it is located  </li> <li>Error pop-up: NA  </li> <li>Logfile information: NA  </li> <li>Solution: Worklist files need to be named so that the end of the filename is worklist.csv. If this is not the case, the file will not be found by the Hamilton software.   </li> </ul>"},{"location":"Common%20Errors/Worklist%20Errors/#csv-in-incorrect-format","title":"CSV in incorrect format","text":"<ul> <li>Problem: CSV cannot be loaded because of file type. The Hamilton method can only use a plain .csv file, so if another file type (e.g. .csv UTF-8) is loaded an error will occur. </li> <li>Error pop-up: States that the item cannot be found in the collection corresponding to the requested name or ordinal.  </li> <li>Logfile information: The LogFile error will include the following near the end of the LogFile </li> </ul> <p>SYSTEM : Execute method - error; An error occurred while running Vector.  The error description is: C:\\Program Files (x86)\\HAMILTON\\Methods\\Master_IVL_Method_Factorial_Screening\\RoboNAAT_Method_v3.med(83, 1) : Item cannot be found in the collection corresponding to the requested name or ordinal. (0x23 - 0x2 - 0x39) </p> <ul> <li>Solution: This problem can be fixed by file&gt;save as the worklist file as a plain .csv.   </li> </ul>"},{"location":"Common%20Errors/Worklist%20Errors/#liquid-class-type-mismatch","title":"Liquid class type mismatch","text":"<ul> <li>Problem: The liquid class included in the worklist doesn\u2019t match the values input for volume and/or dispense type. </li> <li>Error pop-up:  An error occured while running Vector. The error description is C:\\Program Files(x86)\\Hamilton\\Library\\HSLMlStarStepReturnLib.hsl(401): _Method::StepReturn::GetErrorCode() The parameter is incorrect. (0x0 - 0x0 - 0x1).</li> <li>Logfile information: The LogFile error will include the following near the end of the LogFile </li> </ul> <p>Microlab STAR : Main - error; An error occurred while running Vector. The error description is: Tip type mismatch. (Liquidclass 'RoboNAAT_tip1000_water_JetEmpty' is defined for tip type '1000ul High Volume Tip (4)' but 'Channel 1' uses a tip of type '300ul Standard Volume Tip (0)'.) (0x28 - 0x1 - 0x827)    Microlab STAR : 1000ul Channel Aspirate (Single Step) - complete with error; An error occurred while running Vector. The error description is: Tip type mismatch. (Liquidclass 'RoboNAAT_tip1000_water_JetEmpty' is defined for tip type '1000ul High Volume Tip (4)' but 'Channel 1' uses a tip of type '300ul Standard Volume Tip (0)'.) (0x28 - 0x1 - 0x827)    USER : Trace - complete; Aspirate Return: 0  2024-10-29 12:02:56.816 SYSTEM : Execute method - error; An error occurred while running Vector. The error description is: C:\\Program Files (x86)\\Hamilton\\Library\\HSLMlStarStepReturnLib.hsl(401) : _Method::StepReturn::GetErrorCode() The parameter is incorrect. (0x0 - 0x0 - 0x1)</p> <ul> <li>Solution: Fix the listed error. In this case, the worklist needs to be updated so that the tip type is 1000 uL to match the tip type that the liquid class is defined for. This assumes that the 1000 uL tip is the correct tip size for this step. </li> </ul>"},{"location":"Common%20Errors/Worklist%20Errors/#volume-outside-correction-curve","title":"Volume outside correction curve","text":"<ul> <li>Problem: Volume in worklist is not in the correction curve for the designated liquid class. </li> <li>Error pop-up:  An error occured while running Vector. The error description is C:\\Program Files(x86)\\Hamilton\\Library\\HSLMlStarStepReturnLib.hsl(401): _Method::StepReturn::GetErrorCode() The parameter is incorrect. (0x0 - 0x0 - 0x1).</li> <li>Logfile information: The LogFile error will include the following near the end of the LogFile </li> </ul> <p>Microlab STAR : Main - error; An error occurred while running Vector. The error description is: Volume is not in the range of the correction curve (extrapolation not supported for volumes higher than the highest point of the correction curve). (0x6f - 0x2 - 0x55)  Microlab STAR : 1000ul Channel Aspirate (Single Step) - complete with error; An error occurred while running Vector. The error description is: Volume is not in the range of the correction curve (extrapolation not supported for volumes higher than the highest point of the correction curve). (0x6f - 0x2 - 0x55)  USER : Trace - complete; Aspirate Return: 0  SYSTEM : Execute method - error; An error occurred while running Vector. The error description is: C:\\Program Files (x86)\\Hamilton\\Library\\HSLMlStarStepReturnLib.hsl(401) : _Method::StepReturn::GetErrorCode() The parameter is incorrect. (0x0 - 0x0 - 0x1)</p> <ul> <li>Solution: Select a different volume or liquid class type to meet the requirements of the experiment. This could also include updating the liquid class correction curve if needed. </li> </ul>"},{"location":"Common%20Errors/Worklist%20Errors/#incorrect-group-numbering","title":"Incorrect group numbering","text":"<ul> <li>Problem: Group numbering doesn\u2019t start from 1 or skips numbers. </li> <li>Error pop-up:  An error occured while running Vector. The error description is C:\\Program Files(x86)\\Hamilton\\Library\\HSLExtensions\\Sequence.hsl(282): bad argument (0x23 - 0x1 - 0x34).</li> <li>Logfile information: The LogFile error will include the following near the end of the LogFile </li> </ul> <p>SYSTEM : Execute method - error; An error occurred while running Vector. The error description is: C:\\Program Files (x86)\\Hamilton\\Library\\HSLExtensions\\Sequence.hsl(282) : bad argument (0x23 - 0x1 - 0x34)</p> <ul> <li>Solution: Update group numbering to start from 1 and incrementing appropriately. </li> </ul>"},{"location":"Common%20Errors/Worklist%20Errors/#labware-definitions-incorrect-for-deck-layout","title":"Labware definitions incorrect for deck layout","text":"<ul> <li>Problem: The labware name does not exist on the deck layout. When that happens, the system cannot run the worklist as it does not recognize a location for that labware. </li> <li>Error pop-up:  An error occured while running Vector. The error description is C:\\Program Files(x86)\\Hamilton\\Library\\HSLStrLib.hsl(449): type mismatch (0x23 - 0x1 - 0x14).</li> <li>Logfile information: The LogFile error will include the following near the end of the LogFile </li> </ul> <p>SYSTEM : Execute method - error; An error occurred while running Vector. The error description is: C:\\Program Files (x86)\\Hamilton\\Library\\Labware Properties\\Labware_Property_Query.hsi(3519) : An error occurred while running Vector. The error description is: LabwareId dw_96_0002 is invalid for the current deck layout. (0x5 - 0x0 - 0x0) (0x23 - 0x2 - 0x39)</p> <ul> <li>Solution: Update deck layout or worklist so that the labware name matches between the two documents. </li> </ul>"},{"location":"Home/","title":"Index","text":""},{"location":"Home/#overview","title":"Overview","text":"<p>The Diagnostic Robotic Optimization Platform (DROP) was developed by GH Labs to support high throughput development of diagnostic chemistries, with an initial focus on Lateral Flow Assays (LFAs) and Nucleic Acid Amplification Tests (NAATs). The scope of this work includes: </p> <ul> <li>Development and validation of robotic platforms for the optimization of lateral flow assay and nucleic acid amplification chemistries. </li> <li>Application of the high-throughput screening platform to identify best performing antibodies for LFAs in multiple disease areas. </li> <li>Demonstration of utility of Design of Experiments for NAAT development. </li> <li>Technology transfer to partners in India and the UK. </li> </ul>"},{"location":"Home/#the-why","title":"The Why","text":"<p>Assay development can be a largely manual process that requires a large amount of hands-on time from highly trained laboratory personnel. The DROP system uses an automated liquid handling robot to support assay development efforts. The benefits of such a system include: </p> <ul> <li>Time - potential to decrease both total development time and total hands-on time required</li> <li>Maximizes experiment size - no longer limited by how many strips or plates on person can run at a time</li> <li>Reproducibility - ensuing greater accuracy and consistency</li> </ul> <p>Applications of this system can include, but are not limited to: </p> <p> Figure 1. Potential application areas for the DROP system. All of these categories can apply to both NAAT and LFA technologies. </p>"},{"location":"Home/#the-how","title":"The How","text":"<p>DROP consists of hardware, software, and protocols specific to this work. All of this is based on a Hamilton STAR liquid handling robot. Other Hamilton systems could be used with some modifications to the Method/Layout files and LFA hardware. </p> <p>ADD IMAGE OF HAMILTON SYSTEM WITH REQUIRED PARTS Figure 2."},{"location":"Home/#equipment-setup","title":"Equipment Setup","text":"<ul> <li>8 channel Hamilton STAR liquid handling robot installed with the following:<ul> <li>VENUS 6 Software (VENUS 4 method also available)</li> <li>Camera </li> <li>Tip carriers </li> <li>Cooling carriers</li> <li>Grid carriers </li> <li>HEPA filter and UV hood (NAAT applications)</li> <li>iSWAP (optional) </li> </ul> </li> <li>Refrigerated circulator connected to Hamilton cooling carriers</li> <li>Thermocycler (NAAT applications)</li> </ul> <p>Additional capabilities recommended:</p> <p>LFA applications -</p> <ul> <li>Lateral flow assay preparation and assembly </li> <li>3D printing (internal or outsourced) to make LFA strip holders </li> <li>Laser cutting (internal or outsourced) to make LFA cassette holders </li> </ul> <p>NAAT applications -</p> <ul> <li>PCR hood for clean reagent preparation </li> <li>Gel capabilities </li> </ul>"},{"location":"Home/#experiment-overview","title":"Experiment Overview","text":"<p>Running an experiment using the DROP system requires the preparation of a worklist, method, data analysis </p> <p>RoboNAAT  Figure 3. Flow chart describing use of DROP system for NAAT applications. </p> <p>RoboLFA  Figure 4. Flow chart describing use of DROP system for LFA applications. </p>"},{"location":"Home/#worklist","title":"Worklist","text":"<p>The worklist is a .csv file that is input into the Hamilton Run Control to the robot what actions to follow and in what order. The file containing the worklist must end with \u2018worklist.csv\u2019 otherwise the Hamilton software will not recognize it. The file containing the worklist must end with worklist.csv; otherwise, the Hamilton software will not recognize it. The file must be a plain .csv file (not a UTF-8 or any other csv version). A worklist can be made manually or by coding. For LFA optimization work, we have python-based code called the \u201cRobot Worklist Generator\u201d. The worklist is composed of 21 columns (two of which are optional) and infinite rows. The identity and definition of each of these columns is described in Section 8. The order of the columns does not matter. </p> <p>An AWS web application was developed to simplify the user experience when running the DROP system. More details about the web application, termed the Robotic Assay Development Application (RADA) can be found here - LINK</p>"},{"location":"Home/#method","title":"Method","text":""},{"location":"Home/#hands-on-experiment","title":"Hands on experiment","text":""},{"location":"Home/#data-analysis","title":"Data analysis","text":""},{"location":"Home/#ongoing-worknext-steps","title":"Ongoing work/next steps","text":""},{"location":"Home/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"LFA/LFA%20Analysis/","title":"LFA Analysis","text":""},{"location":"LFA/LFA%20Analysis/#background","title":"Background","text":"<p>The DROP system utilizes an integrated camera in the Hamilton STAR to take LFA images at precise location(s) and time(s). These images are automatically saved by VENUS software into a folder titled \"Images\" that is generated in the location where the worklist is stored on the computer. The images are saved using a consistent naming convention, as described below. This naming convention allows for consistent tracking for the images generated from a given worklist. </p> <p>Note</p> <p>'LFA ID #' _ 'Date in YYYYDDMM format' _ 'Time in HHMMSS format'.png  </p>"},{"location":"LFA/LFA%20Analysis/#image-analysis-code-overview","title":"Image Analysis Code Overview","text":"<p> - LFA Image Analysis </p> <p>The LFA Image Analysis code developed for the DROP system takes either an entire folder of images generated by a given worklist or can batch process multiple folders. Below is a high level description for the process carried out by the LFA Image Analysis code. This is completed for every single image in the folder(s) that is/are being analyzed. </p> <ol> <li> <p>Load image: Loads the image (png) taken by the DROP system.</p> <p> Figure 1. LFA image taken by DROP platform. </p> </li> <li> <p>Simple crop: Simple crop as defined by input image processing parameters. The region is roughly identified in yellow in the image below. </p> <p> Figure 2. First crop based on user defined region to reduce file size and simplify identification of lines during second crop. </p> </li> <li> <p>Second crop: Uses line identification to narrow the analysis window to just the read window on the RDT cassette. The area that will be analyzed is in the middle section of the cassette, as highlighted in green below. This avoids any interference due to uneven lighting and shadows that may occur for some RDTs. </p> <p> Figure 3. Second crop narrows read window based on read window in cassette. </p> </li> <li> <p>Quantify: Determines intensity of signal at the test and control lines by using measuring the mean intensity along each column in the image. Line detrend can be used to flatten the curve and account for uneven lighting. </p> <p> Figure 4. Graph of quantified signal from a two-line LFA. </p> </li> </ol>"},{"location":"LFA/LFA%20Analysis/#code-variations-and-modifications","title":"Code variations and modifications","text":"<p>The LFA Image Analysis code was designed to be flexible for various LFA and RDT formats. The parameters that are required are included below. Each of these parameters can be modified based on the requirements for the specific LFA that is being run. </p> <p>Required parameters:</p> <ul> <li>Region to be analyzed (spot or line)</li> <li>Color channel (red, green, blue, or gray)</li> <li>If lines, number of lines to be analyzed</li> <li>Read window size and location </li> <li>Background color (light or dark)</li> </ul> <p>The user has to specify parameter text in either the python code to generate batch files or in the batch files.</p> <p>Example: <pre><code>\"{\\\"row0\\\":608, \\\"row1\\\":900, \\\"col0\\\":680, \\\"col1\\\":1500, \\\"median_blur_size\\\":7, \\\"sobel_size\\\":5, \\\"dark_frame\\\":0, \\\"gblur_size\\\":30, \\\"crop_right_extra\\\":1, \\\"row_offset\\\":40, \\\"col_offset\\\":30, \\\"border\\\":[190, 465], \\\"color_channel\\\":[\\\"red\\\", \\\"red\\\"], \\\"signal_type\\\":[\\\"line\\\", \\\"line\\\"], \\\"do_detrend\\\":1, \\\"ndetrend\\\":5, \\\"nsignal\\\":3, \\\"nblur\\\":400, \\\"top_fraction\\\":0.05, \\\"contour_mode\\\":1, \\\"contour_method\\\":2, \\\"rect_height\\\":10, \\\"edge_gap\\\":40}\"\n</code></pre> The list of parameters is below. The ones in bold will usually need to be modified for a new strip configuration.</p>"},{"location":"LFA/LFA%20Analysis/#to-find-initial-rough-roi","title":"To find initial, rough ROI:","text":"<ul> <li>row0: initial top row</li> <li>row1: initial bottom row</li> <li>col0: initial left column</li> <li>col1: initial right column</li> </ul>"},{"location":"LFA/LFA%20Analysis/#to-crop-top-and-bottom","title":"To crop top and bottom:","text":"<ul> <li>median_blur_size: size to median blur, before getting labeled regions to get slopes</li> <li>sobel_size: size of kernel for blurring during sobel calculation, to crop top and bottom</li> <li>dark_frame: if True: the area around the strip is black, if False, white</li> </ul>"},{"location":"LFA/LFA%20Analysis/#to-crop-left-and-right","title":"To crop left and right:","text":"<ul> <li>gblur_size: size of kernel for gaussian blurring</li> <li>crop_right_extra: if True, on the right, choose the last valley before the last peak, if False, choose the last valley</li> </ul>"},{"location":"LFA/LFA%20Analysis/#to-split-into-rois-for-different-signals-eg-test-line-and-control-line","title":"To split into ROIs for different signals (e.g. test line and control line)","text":"<ul> <li>row_offset: row offset to avoid boundary effects</li> <li>col_offset: column offset to avoid boundary effects</li> <li>border: border to split test and control images, a list if there are more than 2 test lines or spots</li> </ul>"},{"location":"LFA/LFA%20Analysis/#to-process-signals-line-and-spot","title":"To process signals (line and spot)","text":"<ul> <li>color_channel: choices: 'red', 'green', 'blue', and anything else means 'gray'</li> <li>signal_type: line or spot, in a list there are multiple ones, such test and control lines</li> <li>do_detrend: detrend or not</li> <li>ndetrend: number of points at the beginning and the end of the series to used for detrending</li> <li>nsignal: number of points at the max and min ranges to average over to take the delta to find the signal</li> </ul>"},{"location":"LFA/LFA%20Analysis/#to-process-signals-spot-only","title":"To process signals (spot only)","text":"<ul> <li>nblur: number of times for gaussian blurring with kernel size of 5</li> <li>top_fraction: top fraction for threshold finding</li> <li>contour_mode: mode to find contours (see open cv documentation)</li> <li>contour_method: method to find contours (see open cv documentation)</li> <li>rect_height: rectangle height from the contour center to find the ROI</li> <li>edge_gap: if the contour center is within the edge_gap from the top or bottom borders, use the middle</li> </ul>"},{"location":"LFA/LFA%20Analysis/#instructions-for-use","title":"Instructions for use","text":"<ol> <li>Install Jupyter Notebook If not already installed <ul> <li>From Terminal: Follow the instructions described here https://www.geeksforgeeks.org/install-jupyter-notebook-in-windows/</li> <li>From Anaconda (recommended)<ul> <li>Install Anaconda: Follow the instructions described here https://www.geeksforgeeks.org/how-to-install-anaconda-on-windows/</li> <li>Install Jupyter Notebook in Anaconda: Follow the instructions here https://www.geeksforgeeks.org/install-jupyter-notebook-in-windows/</li> </ul> </li> </ul> </li> <li> <p>Copy analysis files to the experiment folder </p> <ul> <li>Jupyter Notebook: \u2018Batch_files_and_run.ipynb\u2019</li> <li>Python file(s): \u2018backend.py\u2019, \u2018generate_batch_files_and_run.py\u2019, \u2018Hamilton_image_analysis.py\u2019</li> <li>Folder(s) containing the images to be analyzed. Ensure that the folder name is descriptive. </li> </ul> <p> Figure 5. Folder structure before analysis. For this experiment, there were two robot runs that each generated images. Therefore, the folder contains the necessary pieces of code and two folders of images to be analyzed. </p> </li> <li> <p>Launch Jupyter Notebook</p> <ul> <li>Option 1: Command prompt <ul> <li>Open your terminal or command prompt.</li> <li>Run the following command to start Jupyter Notebook: jupyter notebook</li> </ul> </li> <li>Option 2: Anaconda <ul> <li>Open Anaconda</li> <li>Click on the Jupyter notebook icon</li> </ul> </li> <li>Option 3: Programs (works only if Anaconda is installed)<ul> <li>Navigate to Jupyter notebook in programs or by typing in the OS search bar</li> </ul> </li> </ul> </li> <li>Open the Notebook<ul> <li>A new tab will open in your default web browser showing the Jupyter Notebook interface.</li> <li>Navigate through the file browser to find and click on \u2018Batch_files_and_run.ipynb\u2019 file.  </li> </ul> </li> <li>Run each Kernel<ul> <li>Run one Kernel at a time by selecting the Kernel and pressing Shift + Enter or by selecting the \u201cRun\u201d button on the toolbar. </li> <li>When a Kernel is running, a [*] will appear next to \u201cIn\u201d on the left-hand side. Once it is complete there will be a number that appears inside the brackets. </li> <li>Note: Make sure to run the Kernels in order. The analysis will not complete successfully if they are run out of order. </li> </ul> </li> <li> <p>Review Output</p> <ul> <li>In the analysis folder, the following file will be generated<ul> <li>all_results.csv</li> <li>A batch file for every folder of images that is analyzed. Naming will be \u201cFolder name\u201d.bat</li> </ul> </li> <li>In the image folder, the following files will be generated<ul> <li>image.csv</li> <li>image_ROI_line.pdf</li> </ul> </li> </ul> <p> Figure 6. Folder structure after analysis. For this experiment, there were two robot runs that each generated images. Therefore, the folder contains the necessary pieces of code and two folders of images to be analyzed. The output csv (all_results.csv) contains the analysis from both folders. </p> </li> <li> <p>Save and shut down</p> <ul> <li>Remember to save your work frequently by clicking the save icon or pressing Ctrl + S.</li> <li>When you\u2019re done, you can shut down the notebook by closing the browser tab and stopping the Jupyter server in your terminal by pressing Ctrl + C.</li> </ul> </li> </ol>"},{"location":"LFA/LFA%20Analysis/#project-layout-after-successful-analysis","title":"Project layout after successful analysis","text":"<pre><code>backend.py                          # Backend code that enables image processing and analysis. \ngenerate_batch_files_and_run.ipynb  # Jupyter notebook that generates batch files and runs analysis. \nHamilton_image_analysis.py          \nimages.bat                          # Batch file  for each folder of images to be analyzed.\nall_results.csv                     # CSV file with the data from all images analyzed.\nimages/                             # Folder of images to be analyzed. \n    image.csv                       # CSV file with the data generated from the images in this folder.\n    image_ROI_line.pdf              # PDF with images and curves generated from data in this folder. \n    ...                             # Images identified for analysis.\n</code></pre>"},{"location":"LFA/LFA%20Example%20Efforts/","title":"Example Efforts","text":""},{"location":"LFA/LFA%20Example%20Efforts/#antibody-screening-effort","title":"Antibody screening effort","text":"<p>The most used protocols for the DROP system to date are for large antibody screening efforts in the LFA format. These efforts were completed for SARS-CoV-2 spike and nucleocapsid, Malaria pLDH, and Mycobacterium Tuberculosis Lipoarabinomannan (TB LAM). A detailed explanation of one of these efforts is included here. More information on additional antibody screening efforts can be found in the following manuscripts. </p> <p>The rational behind the need for high-throughput screening of antibodies for LFA is based in binding kinetics. Traditional methods for measuring binding for antibodies/antigens, which include either Enzyme Linked Immunosorbent Assays (ELISAs) and Biolayer Inferometry (BLI), measure protein binding at steady state. However, binding in an LFA does not take place under optimal binding conditions. The RoboLFA system  is able to screen antibodies in an LFA format at a high rate, allowing for more precise information regarding optimal antibody pairs for a given LFA. This served particularly useful during the early days of the SARS-CoV-2 pandemic, and enabled very rapid down selection to high performing antibody pairs when very little information on various antibody products existed. </p>"},{"location":"LFA/LFA%20Example%20Efforts/#experimental-design","title":"Experimental Design","text":"<p>For this effort, we have 10 antibodies against TB LAM that have been identified to enter the screen. These antibodies are labeled TBL-001 to 010. There is a control pair that is established as the best performing pair for clinical LAM, which is TBL-001 as detector and TBL-002 as capture.</p> <p>In this screening effort, there was a push to run all antibodies in both the capture and detection formats. This is considered a full factorial design of experiments (DOE). For other types of optimization efforts, such as conjugation chemistry or running buffer optimization, other DOE approaches may be recommended. </p> <p>The antigen used in this screening is cultured LAM (BEI). </p> <p>The format for the selected LFA consists of a streptavidin test line and a donkey anti-chicken control line striped onto the nitrocellulose membrane. This format was seelcted for this effort as it eliminated the need to manufacture custom LFAs for each antibody pair. Each antibody in the screen will be (1) biotinylated and (2) conjugated to a 400nm latex nanoparticle. Something important to understand is that the stack format can make a big difference on the screening results, an antibody that performs very well as a biotinylated antibody capture may not have the same performance when striped directly onto the test line. Therefore, it is recommended to screen antibodies in the final format for the assay. </p>"},{"location":"LFA/LFA%20Example%20Efforts/#reagent-preparation","title":"Reagent Preparation","text":"<p>For this effort, all antibodies were conjugated to carboxylated latex nanoparticles (Magsphere CAB400NM). The samee antibodies were also biotinylated with 1 molar excess using EZ-Link NHS-PEG12-Biotin (A35389). These antibody conjugates were QCed against the control antibody pair and using Vector QuantTag Biotin Quantification Kit (BDK-2000). </p> <p>Test membranes were prepared using a generic LFA format. This included CN95 nitrocellulose (Sartorius) striped with 1mg/mL polySA (Biotez), and 0.5mg/mL Donkey anti-chicken IgG (Jackson ImmunoResearch). </p>"},{"location":"LFA/LFA%20Example%20Efforts/#worklist-preparation-and-validation","title":"Worklist Preparation and Validation","text":"<p>To break up the 10x10 grid, there are two different worklists required. The worklists are: </p> <p> Worklist A: 3 detection antibodies with 5 capture antibodies (15 total combinations)</p> <p> Worklist B: 1 detection antibody with 15 capture antibodies (15 total combinations)</p> <p>The breakdown of how these worklists will span the 10x10 grid are shown in Figure 1. </p> <p> Figure 1. Grid to demonstrate how to complete a 10x10 screening effort for a single antigen. Screen requires two worklists, a 3x5 and a 1x15. </p> <p>For every robot run, a worklist is run covering the antibodies shown in the grid. The maximum number of cassettes for each robot run for this cassette holder limits the number of LFAs run to 96. With this limitation, 3 negatives and 3 positives are run for every antibody pair, including an additional control antibody.  </p> <p>The steps described in the worklist are as followed:</p> <ul> <li>Pipette 2uL of biotinylated antibody onto conjugate pad</li> <li>Pipette 4uL of latex conjugated antibody onto sample pad</li> <li>Wait 15 minutes for conjugates to dry</li> <li>Pipette 75uL sample onto sample pad</li> <li>Wait 30 minutes for LFAs to run</li> <li>Image read window </li> </ul>"},{"location":"LFA/LFA%20Example%20Efforts/#running-the-experiment","title":"Running the experiment","text":"<p>To start, all reagent plates were prepared with the reagents detailed in the worklist viewer in the RADA app. This includes antibody conjugates and samples (negative and positive). The cassette holder was filled with the prepared LFAs and loaded onto the deck. Tips were loaded onto the deck corresponding to the number identified in the simulation run. The validated worklist(s) were then run on the Hamilton STAR using the VENUS software.</p> <p>Once the run has completed, images are automatically loaded into the same folder as the worklist. These images were then analyzed using the GH Labs image analysis software. </p>"},{"location":"LFA/LFA%20Example%20Efforts/#results-and-conclusions","title":"Results and Conclusions","text":"<p>In this antibody screening effort, a total 672 LFAs were split across 7 robot runs. This included 100 different antibody pairs screened in addition the control pair included for every run. From this experiment, there were a handful of antibody pairs identified that performed better than the control pair (Figure 2). </p> <p> Figure 2. Results from antibody screening effort. </p> <p>LFA data is often presented as either S/N or S-N. Both analyses are informative in different ways for an LFA screening or optimization effort. Where S-N provides information about the magnitude of the dynamic range between a negative and positive, S/N  provides information about the ratio between the negative and positive. Depending on the end goals of the screen, it can be more useful to do one analysis over the other. We have presented S/N for this example experiment as it puts more weight on antibody pairs without non-specific binding in the negative control. </p> <p>This is an example of how to use the RoboLFA system to do antibody screening. Every assay comes with it's own differences that may lead to changes in the hardware, software, and protocols. These differences must be considered and the adjustments validated before starting a new LFA effort on the DROP system. </p>"},{"location":"LFA/LFA%20Example%20Efforts/#other-example-efforts","title":"Other example efforts","text":"<p>The range of efforts that the RoboLFA system can be used for are large. Everything from an analytical or clinical evaluation to a large DoE screening running buffer conditions are possible. </p> <p> Figure 3. Examples of roboLFA development effrts. </p> <p>More information about the system and other applications can be found in the following manuscripts: </p> <p> [1] Anderson, C.E., Huynh, T., Gasperino, D.J. et al. Automated liquid handling robot for rapid lateral flow assay development. Anal Bioanal Chem 414, 2607\u20132618 (2022). https://doi.org/10.1007/s00216-022-03897-9  [2] Cate, D. M., Bishop, J. D., Hsieh, H. V., et al. Antibody Screening Results for Anti-Nucleocapsid Antibodies Toward the Development of a Lateral Flow Assay to Detect SARS-CoV-2 Nucleocapsid Protein. ACS Omega 2021 6 (39), 25116-25123. DOI: 10.1021/acsomega.1c01253   [3] Cantera, J. L., Cate, D. M., Golden, A., et al. Screening Antibodies Raised against the Spike Glycoprotein of SARS-CoV-2 to Support the Development of Rapid Antigen Assays. ACS Omega 2021 6 (31), 20139-20148. DOI: 10.1021/acsomega.1c01321  </p>"},{"location":"LFA/LFA%20Hamilton%20Files/","title":"Hamilton Files","text":"<p> - RoboLFA Hamilton Method and Layout File </p> <p>The Hamilton Method designed by GH Labs was built with the goal of ultimate flexibility when it came to running LFA or NAAT experiment. The Method consists of 10+ Submethods that enable the user to input a worklist where every row is a single command being sent to the robot. These commands can include liquid transfer, imaging, and plate movement (iSWAP specific) steps with the option to fix timing and grouping as needed. The LFA and NAAT methods are identical, but their associated layout files, which specify the hardware to be used for a given experiment, are different. Each implementation of the DROP system may require reconfiguration of the Layout file depending on the system. </p> <p>This deck layout was designed for running lateral flow assays and rapid diagnostic tests. These assay/tests can be in either strip or cassette form. There are specific holders for each so that their locations are consistent. For most LFAs, nesting tip racks (NTRs) can be used to maximize the available space on the deck for cassettes or strips. </p> <p>  Figure 1. Deck layout for RoboLFA. Specific information about each deck location can be found in the tables below. Modifications can be made to the deck layout in VENUS software.  </p>"},{"location":"LFA/LFA%20Hamilton%20Files/#plate-locations","title":"Plate Locations","text":"<p>The deck layout has been defined with the following labware in their respective positions. To use all of these deck locations, the Hamilton flat plate adapter needs to be added to locations 1-9. For most experiments, these will not be required as the only plates used will be in locations 11-14. </p> Updated Labware IDs Position # wells flat_reservoir_0003 1 1 flat_384_0003 2 384 flat_96_0003 3 96 dw_96_0003 4 96 empty 5 NA flat_reservoir_0002 6 1 flat_384_0002 7 384 flat_96_0002 8 96 dw_96_0002 9 96 empty 10 NA flat_reservoir_0001 11 1 flat_384_0001 12 384 flat_96_0001 13 96 dw_96_0001 14 96 empty 15 NA"},{"location":"LFA/LFA%20Hamilton%20Files/#plate-information","title":"Plate Information","text":"<p>The deck layout has been defined with specific plates. More information about each plate type is included below. </p> Plate ID Description # wells Example Part #s flat_reservoir Reservoir for multichannel use. Requires high dead volume and therefore is not recommended for most uses. 1 Millipore Sigma # HS120637 or ThermoFisher # 15075 flat_384 Flat bottom plate with 384 wells. V and U bottom wells can also be used here. 384 Greiner Bio-One # 781900 or 781901 flat_96 Flat 96 well plate. V and U bottom plate can also be used here. 96 Greiner Bio-One # 650901, 651901, 655900, or 655901 dw_96 Deep well plate with 96 wells. 96 Greiner Bio-One #780261 or Hamilton #\u2019s 6471-01 and 235656 <p>The product information is for examples of plates and reservoirs that have been used previously. If the plate follows SBS plate format it should be functional in this plate layout. </p>"},{"location":"LFA/LFA%20Hamilton%20Files/#pipette-tips","title":"Pipette Tips","text":"<p>The deck layout has been defined with the following pipette tips on the deck. </p> Pipette tips # racks on deck # tips on deck Locations Hamilton Product # 50 uL partial 1 96 A 235948, 235979 or 235978 50 uL full (NTR) 20 1,920 K, L, M, N, O 235987 300 uL partial 1 96 B 235903, 235937 or 235938 300 uL full (NTR) 20 1,920 F, G, H, I, J 235985 1000 uL partial 3 288 A 235905 or 235940"},{"location":"LFA/LFA%20Hamilton%20Files/#lfa-holders","title":"LFA Holders","text":"<p>The deck layout has been defined with space for one of the following LFA or RDT holders positioned at a time. More information on these LFA holders can be found in the Software section for roboLFA.</p> LFa or RDT Holders Position # wells IVL_Plate_v2a_16strips_plastic_col_first_0001 to 012 LFA Bay Increments of 8 or 16 IVL_Plate_v3_96cassettes_ABformat_0001 LFA Bay 96 038379_v3.SLDPRT LFA Bay 80"},{"location":"LFA/LFA%20Hardware/","title":"Hardware","text":"<p>LFAs can come in many different forms. We have developed holders to address two of the most commonly used formats, a strip and a cassette. Other form factors can be integrated, but may require additional development to get a holder that is compatible with both the form factor of the LFA and the form factor of the deck postiions on the Hamilton STAR. These holders may also be adapted to other liquid handling systems. </p> <p> Figure 1. Image of the developed LFA strip (A), (B), and (C), and cassettes (D) from https://doi.org/10.1007/s00216-022-03897-9</p> <p>The objective of this document is to describe the pieces of hardware that might be required to operate the DROP system. This includes modifications to the base assembly from Hamilton, machined aluminum trays, laser cut acrylic sheets and 3D printed strip holders. This document has been prepared such that the entire assembly can be understood, as many parts relate to one another in the final deck layout.  </p> <p> - CAD Files</p>"},{"location":"LFA/LFA%20Hardware/#custom-deck-modifications","title":"Custom Deck Modifications","text":"<p>The CAD files required for the custom deck modifications are broken into individual assemblies. These modifications assume that the carrier is an older version of the Hamilton Carrier. Newer version of the Hamilton Carrier are plastic and have slightly different dimensions. Additional development to add the alignment posts would be required if using a newer Hamilton Carrier for LFA applications. </p> <p> Figure 2. Hamilton base carriers that have pegs and spacers added in their desired locations.  Associated parts are described in Tables 1 and 2.</p> <p>Table 1. Assembly of Hamilton base carriers that are modified so they can provide fiducial markers when LFA or cassette holders are placed on top. </p> No. File Name Description Vendor Qty Modified Link 1 047284.SLDASM Base assembly Hamilton Robotics 3 2 047283.SLDPRT Carrier base Hamilton Robotics 188039/00 1 1 3 047279.SLDASM Hamilton stand Hamilton Robotics 3 1 4 047274.SLDPRT Top plate Hamilton Robotics 3 Pin holes added 3 5 047275.SLDPRT Leg Hamilton Robotics 2 No 3 6 047281.SLDASM Hamilton stand Hamilton Robotics 1 1 7 047273.SLDPRT Top plate Hamilton Robotics 1 Pin and threaded holes added 6 8 047275.SLDPRT Leg Hamilton Robotics 2 No 6 9 047282.SLDASM Hamilton stand Hamilton Robotics 1 No 1 10 047277.SLDPRT Top plate Hamilton Robotics 1 No 9 <p>Table 2. Alignment posts and spacers to enable correct assembly. </p> No. File Name Description Vendor Qty Modified Link 11 047288.SLDPRT Alignment posts Custom 2 1 + 16 12 Hamilton_spacer.SLDPRT Spacer with top hat Custom 2 1 + 16 13 Hamilton_spacer_2.SLDPRT Flat spacer Custom 2 1 + 16 <p>Note: Hamilton_spacer.SLDPRT doesn\u2019t correctly account for tolerances, there is a need for us to improve the file to account for tolerances if this part is 3D printed.</p>"},{"location":"LFA/LFA%20Hardware/#robolfa-strip-holder","title":"RoboLFA Strip Holder","text":"<p>An LFA strip holder is helpful when a cassette has not yet been designed or the LFA dimensions are still requiring adjustment. Some LFAs on the market are in strip form, such as Milenia Biotec HybriDetect Universal Lateral Flow Assays and over-the-counter HCG tests, and therefore would stay in this category throught the entire research and development lifecycle. On this site we will mostly discuss our most commonly used strip holder, which consists of the following:</p> <ul> <li>Aluminium plate (85.5 x 127.8 mm) with six holes compatible with (#6-32) screws  </li> <li>3D printed base plate designed to fit the width and length of the LFA strips</li> <li>3D printed top plate designed with necessary pinch points, wells for reagent addition, and read window   </li> <li>6 Screws (6/32 x 1/2\")</li> </ul> <p>When starting a new RoboLFA effort, it is critical to understand the requirements for a strip holder. This includes the length and width of the strip, the location and thickness of pinch points, the location and volume required for reagent addition, and the location and size of the read window. Each of these factors can be modified in the CAD files linked below. More detailed instructions can be found here. </p> <p> Figure 2. Strip holder to hold non-cassetted LFAs. The designed holder consists of three parts, (1) an aluminum base plate, (2) 3D brinted base plate and (3) 3D printed top plate. The bottom plate is designed with guide posts for consistent placement of a strip, while the top plate is designed to have pinch points and wells where required. Image from https://doi.org/10.1007/s00216-022-03897-9</p> <p>Table 3. LFA Strip Holder which consist of an aluminum base onto which 3D printed pieces are screwed. Similar to the RoboLFA Cassette Holder, The size and spacing of the strips can be varied depending on the need of the specific LFA. The dimensions of the wells, pinch points, and read windows can all be modified as needed. We typically have used ABS (acrylonitrile butadiene styrene) for this part.</p> No. File Name Description Vendor Qty Modified Link 14 047286.SLDPRT LFA strip holder base Custom 1-5 1 15 056923.SLDPRT (LFA Holder 3) LFA strip top+bottom frame Custom 1-5 14 <p>We have two other versions of the strip holder that have some usability issues that need to be addressed. The other two strip holders are either challenging to set up reproducibly or require additional engineering on the clamping mechanism. More details about both of these holders can be found in the supplemental material.  If we were to get additional time to further improve the strip holders, the most promising holder is the lego inspired assembly that allows for different 3D printed cross bars to be added interchangeably in 0.5mm increments along the length of the holder. This design allows for the manual adjustment of holder components (wells, pinch points, etc) without the need to manufacture additional parts.</p>"},{"location":"LFA/LFA%20Hardware/#robolfa-cassette-holder","title":"RoboLFA Cassette Holder","text":"<p>An LFA cassette holder is used when the strip dimensions have been locked and is further along the R&amp;D pipeline. The cassette holder has defined spacing, allowing for precise liquid delivery and imaging across a large number of LFA devices.  </p> <p>The cassette holder consists of:  </p> <ul> <li>A 1/4\" aluminum plate (40 x 48 cm) with the following modifications  <ul> <li>Two pins to guide the acrylic sheet in place  </li> <li>Two drilled holes (dimensions) that enable consistent placement of the cassette holder onto the Hamilton Deck  </li> </ul> </li> <li>A 1/16\" acrylic sheet (40 x 48 cm) with the following modifications<ul> <li>Laser cut to fit the cassette dimensions (example CAD files fit 80 and 96 cassettes respectively)</li> <li>Two pin holes to guide on the aluminum plate </li> </ul> </li> </ul> <p> Figure 3. Holder for cassetted LFAs. The designed holder consists of two parts, (1) an aluminum base plate, (2) a laser cut 1/16\" acrylic sheet designed to fit cassettes with little \"wiggle room\".  Image from https://doi.org/10.1007/s00216-022-03897-9</p> No. File Name Description Vendor Qty Modified Link 16 047287.SLDPRT LFA cassette deck Custom 1 Holes for alignment posts and posts for cassette holder 12 + 13 17 038379_v1.SLDPRT or  038379_v2.SLDPRT (LFA Holder 4) LFA cassette holder Custom 1 Holes for posts and cassettes (LFA cassette dependent) 16"},{"location":"LFA/LFA%20Hardware/#deck-build","title":"Deck build","text":"<p>The hardware above is placed onto the deck in the following, respective manners, for the cassette and strip holders. </p> <p> Figure 4. Deck layout with cassette holder and corresponding guidance spacers. </p> <p>Images of deck build with both the LFA strip holder </p> <p> Figure 5. Deck layout with strip holder. </p>"},{"location":"LFA/LFA%20Overview/","title":"Overview","text":"<p>Lateral Flow Assays (LFAs) are a popular diagnostic technology that enables sophisticated protein based chemistries to be run at or near the point of care. With low cost and ease of use, LFAs have been used for applications that span across a wide range of targets. These targets include bacteria, viruses, toxins, and more. Even though the use of these tests is fairly straightforward, there can be a significant investment required to create high performance LFAs. </p> <p>An example of a traditional LFA is shown in Figure 1 below. This is an example of a direct immunoassay, where a capture antibody is immobilized on the test membrane that is specific to the analyte of interest. A control antibody is immobilized on a second line to verify that the test results can be interpreted correctly. Antibodies conjugated to a label, often a gold or latex nanoparticle, are dried into a conjugate pad placed upstream from the test membrane. Before the conjugate pad, a sample pad is placed onto which the sample and/or running buffers are placed when the LFA is run. Downstream from the test membrane is a wicking pad, which helps to drive fluid flow through the test membrane. </p> <p> Figure 1. Schematic of a classic LFA, from https://doi.org/10.1007/s00216-022-03897-9. The image depicts the materials involved in an LFA, which often includes a sample pad, a conjugate pad, a test membrane onto which a test and control ine are striped, and a wicking pad to drive flow (A). Typical use involves the addition of a sample and/or buffer to the sample pad, which flows downstream to rehydrate the conjugate dried into the conjugate pad (B). Liquid then moves into the test membrane onto which a test and/or control line will appear depending on whether analyte is present in the sample. All remaining liquid and unbound proteins then flow into the wicking pad. </p> <p>While an LFA is designed to be an quick and easy to use diagnostic, there are a lot of components that go into the optimization process. This includes, but is not limited to: </p> <ol> <li>Materials choice and dimensions: sample pad, conjugate pad, test membrane, wicking pad, and backing card</li> <li>Material treatment: blocking, prewetting, etc</li> <li>Assay format: direct, competitive, streptavidin test line with biotinylated capture antibody, etc</li> <li>Molecular recognition element(s): antibody or antibody fragment, aptamer, proteins generated through directed evolution, computational, or rational design</li> <li>Conjugation chemistries</li> <li>Striping, spraying, and drying conditions </li> <li>Running buffer components </li> <li>Assay timing </li> </ol> <p>To address the time and monetary cost involved in LFA research and development, GH Labs developed a platform utilizing an automated liquid handling system. This system, termed RoboLFA, is a subcategory of the DROP platform. RoboLFA consists of LFA specific hardware, software, and protocols to enable large optimization or characterization expriments with limited hands-on time required. The system is described in detail in a paper by Anderson et al<sup>1</sup>. Two applications using the roboLFA system are discussed in papers by Cate et al<sup>2</sup> and Cantera et al<sup>3</sup>. Additional information on how to implement and/or modify this system is found in the respective sections for Hardware, Software, Protocols, and Example Efforts. </p>"},{"location":"LFA/LFA%20Overview/#references","title":"References","text":"<p> [1] Anderson, C.E., Huynh, T., Gasperino, D.J. et al. Automated liquid handling robot for rapid lateral flow assay development. Anal Bioanal Chem 414, 2607\u20132618 (2022). https://doi.org/10.1007/s00216-022-03897-9  [2] Cate, D. M., Bishop, J. D., Hsieh, H. V., et al. Antibody Screening Results for Anti-Nucleocapsid Antibodies Toward the Development of a Lateral Flow Assay to Detect SARS-CoV-2 Nucleocapsid Protein. ACS Omega 2021 6 (39), 25116-25123. DOI: 10.1021/acsomega.1c01253   [3] Cantera, J. L., Cate, D. M., Golden, A., et al. Screening Antibodies Raised against the Spike Glycoprotein of SARS-CoV-2 to Support the Development of Rapid Antigen Assays. ACS Omega 2021 6 (31), 20139-20148. DOI: 10.1021/acsomega.1c01321  </p>"},{"location":"LFA/LFA%20Protocols/","title":"Protocols","text":"<p>The DROP workflow, diagrammed in Figure 1 below, includes experimental design, experiment setup, experiment validation, running the experiment, and data analysis. This document specifically covers the procedures for Steps 3 and 4: experiment validation and running the experiment. Additional information about assay specific worklist generation and data analysis can be found in their respective pages. </p> <p> Figure 1. High level overview of the DROP workflow. This workflow includes (1) Experimental design (2) Experiment setup (3) Experiment validation (4) Running an experiment and (5) Data analysis. In most applications, futher iteration would continue until product criteria are met.  </p>"},{"location":"LFA/LFA%20Protocols/#experiment-checklist","title":"Experiment Checklist","text":"<p>A. Preparing for the experiment: </p> <ol> <li>Design experimental protocol </li> <li>Design, source, and build LFA components </li> <li>Identify and define additional liquid classes or hardware requirements within the Hamilton software, if needed  </li> <li>Source appropriate reagents, pipette tips, plates, LFAs, and custom LFA-specific hardware  </li> <li>Generate experiment worklist file  </li> <li>Validate worklist file in simulation mode within the Hamilton software </li> <li>Make modifications to worklist as needed  Note plate locations and number of tips used </li> </ol> <p>B. Running the experiment: </p> <ol> <li>Prepare Hamilton STAR instrument deck   </li> <li>Spray down deck with cleaning solution  </li> <li>Complete Daily Maintenance. Skip, if already completed for the day.   </li> <li>Load all required tips onto instrument  </li> <li>Load reagents and samples into corresponding plates    </li> <li>Place all reagent plates, sample plates, LFAs and associated custom LFA-specific hardware onto Hamilton STAR instrument deck  </li> <li>Run worklist(s) on Hamilton STAR using Hamilton software  </li> </ol> <p>C. Finalizing experiment: </p> <ol> <li>Verify data has been acquired and saved in appropriate folders  </li> <li>Clean up Hamilton STAR instrument deck, reusable custom LFA-specific hardware, and dispose of materials appropriately  </li> <li>Analyze data using GH Labs image analysis software  </li> <li>Prepare documentation of results and analysis   </li> </ol>"},{"location":"LFA/LFA%20Protocols/#experimental-design","title":"Experimental design","text":"<p>Experimental design on the RoboLFA system can be as simple or complex as needed. The system is designed to be flexible and accommodate a range of experimental designs. Some examples of variables that can be optimized using the RoboLFA system are shown in Figure 2 below.</p> <p> Figure 2. Examples of variables that can be optimized using the RoboLFA system. </p>"},{"location":"LFA/LFA%20Protocols/#experiment-setup","title":"Experiment Setup","text":"<p>An LFA effort on the DROP system begins by preparing the hardware and software for a given assay. Most often, we'll start with a strip or cassette with specific dimensions that correspond to the overall size of the assay, the pipetting location(s), and the read window. </p> <p> Figure 3. Examples of a strip LFA (A) and cassetted LFA (B) with some example dimensions that may be required. Not pictured are the height dimensions that are important when programming pipetting steps. It is recommended to measure using a caliper or other highly accurate measurement tool. </p> <p>For a given LFA, make sure to take note of the important x, y, and z locations that will need to be incorporated for the hardware and software. </p>"},{"location":"LFA/LFA%20Protocols/#adjusting-hardware-for-lfa","title":"Adjusting hardware for LFA","text":""},{"location":"LFA/LFA%20Protocols/#cassette-holder-adjustments","title":"Cassette holder adjustments","text":"<p>The cassette holder is made from laser cut acrylic that has a grid to consistently space cassettes inside the deck of the Hamilton STAR. To modify for a given LFA, start by measuring the width and the length of the LFA cassette. Make adjustments to the CAD file (link) so that the cassette can fit inside the rectangle cut from the acrylic. Make sure to keep the spacing between rectangles consistent in both the x and y dimensions, as this will be important when making labware adjustments. </p>"},{"location":"LFA/LFA%20Protocols/#strip-holder-adjustments","title":"Strip holder adjustments","text":"<p>The strip holder is made 3D printed parts and holds either 8 or 16-qty LFAs of various lengths and sizes. To modify for a given LFA, measure the width and length of the strip and adjust the posts on the base CAD file accordingly. Next, measure the distances where LFA components overlap and modify the bars on the top part CAD file to ensure that they apply pressure in the appropriate locations and allow for proper liquid flow. </p> <p>When moving the bars of the top piece, ensure that the imaging area (i.e., where test and control lines are striped on the analytical membrane) is unobstructed and available for imaging. Make sure to keep the spacing between the strips consistent in both the x and y dimensions, as this will be important when making labware adjustments.</p> <p> Figure 4. Screenshot of the first dialog window in Hamilton Labware Editor where key parameters for hardware are specified. </p> <p> Figure 5. Screenshot of the second dialog window in Hamilton Labware Editor where key parameters for hardware are specified. </p> <p>Following the creation of a new labware definition, it is important to perform a verification of the location of the first position, using the Hamilton teaching needle. To do so:</p> <ol> <li>Open the relevant layout file</li> <li>Add the labware to the deck layout if needed</li> <li>Right click the labware on the deck. Select \"Adjust Location\" from the drop down menu. </li> <li>Make the necessary adjustments to the x, y, and z locations as appropriate. More detailed training on this process can be found inn VENUS Basic and Advanced Training Courses (https://hamilton.trainingplus.ch/en/page/hamilton-training). </li> </ol> <p> Figure 6. Screenshot depicting navigation to Labware Position adjustment. </p> <p> Figure 7. Screenshot detailing adjustment of Labware Position in the Hamilton Layout File. </p>"},{"location":"LFA/LFA%20Protocols/#adjusting-labware-definition-for-lfa","title":"Adjusting labware definition for LFA","text":"<p>It is generally advised to maintain the x and y spacings of the LFA cassette and strip holders to avoid having to generate a new hardware definition. A hardware definition for custom 80- and 96-cassette holders, as well as for a 16-qty LFA strip holder plate already exist and are fully described in other locations of this document. </p> <p>If a new holder configuration is needed, due to incompatible dimensions with existing hardware, a new hardware labware layout can be created on the Hamilton Method Editor software (Tools&gt;Labware Editor\u2026&gt;Create New Labware). An example screenshot of a strip holder layout can be found below. Some important parameters that need to be defined are the offset distance of the front left most pipetting location (e.g., sample well), the spacing between strips in the x and y direction, the location of the first strip, and the order sequence of strips on the holder. Ensure that the newly created labware definition is saved.  </p>"},{"location":"LFA/LFA%20Protocols/#adjusting-rada-for-strip","title":"Adjusting RADA for strip","text":"<p>New LFA strip hardware requires the creation of a new assay plate configuration on the RADA application. Important variables to document based on the custom dimensions of the new hardware are: the number of rows and columns of cassettes or strips that fit on the plate, and the location corresponding to specific spots where pipetting (i.e., sample addition, conjugate addition, etc.) and imaging steps take place. </p> <p>The locations are generally represented as the offset distance (i.e., dx, dz) from the first position of the strip, as specified in the labware definition. More detailed information on this process can be accessed in the admin capabilities section of the RADA documentation.  </p>"},{"location":"LFA/LFA%20Protocols/#adjusting-imaging-for-strip","title":"Adjusting imaging for strip","text":"<p>The LFA image analysis code relies on input variables identified by the user to guide analysis of the lines, such as:</p> <ul> <li>Rough region of interest (ROI) to guide the code on specific locations and dimensions of the read window</li> <li>Color channel for analysis </li> <li>Signal type: line or spot</li> <li>Number of spots or lines</li> <li>Locations of spots or lines in relation to one another</li> </ul> <p>Once the dimensions and spacing of the LFA inside the strip holder or cassette have been finalized, the LFA analysis code should be modified so More detailed information on the process of modifying these variables can be found here.</p>"},{"location":"LFA/LFA%20Protocols/#optimizing-liquid-classes","title":"Optimizing liquid classes","text":"<p>The DROP system has a library of liquid classes that can be used to run experiments. These liquid classes are modified to have the precise pipetting protocol to enable consistent pipetting for a given liquid class. It is important to precisely tune a liquid class for the liquids that will be pipetted during an experiment on the DROP system. Some of the parameters that are included are flow rate, air transport volume, blowout volume, settling time, and more. More information can be found in the CO-RE Liquid Editor Help section. Liquid classes can defined using the Hamilton Liquid Verification Kit (LVK). When more liquid classes are made, or when an existing liquid class is validated for a new liquid, they will undergo performance qualification. The list below includes liquid classes used commonly for the LFA system. </p> Liquid Class Tip size Dispense Type Recommended validation for: RoboLFA_tip50_spot_JetEmpty 50 Jet Empty Antibody and conjugate solutions RoboLFA_tip300_buffer_JetEmpty 300 Jet Empty LFA running buffer RoboLFA_tip300_buffer_SurfaceEmpty 300 Surface Empty LFA running buffer RoboLFA_tip50_buffer_JetEmpty 50 Jet Empty LFA running buffer RoboLFA_tip50_buffer_SurfaceEmpty 50 Surface Empty LFA running buffer RoboLFA_tip50_plasma_JetEmpty 50 Jet Empty Plasma or similar RoboLFA_tip50_plasma_SurfaceEmpty 50 Surface Empty Plasma or similar RoboLFA_tip50_water_JetEmpty 50 Jet Empty Water RoboLFA_tip50_water_SurfaceEmpty 50 Surface Empty Water <p>Once all of the above activities have been completed, the system is ready to run an LFA effort. An example checklist is shown below to step through the process from beginning to end. </p>"},{"location":"LFA/LFA%20Protocols/#generate-worklists","title":"Generate worklist(s)","text":"<p>Worklists can be generated using the Robotic Assay Development Application (RADA) or through manual methods. An explanation on how to make a worklist using either method can be found in the RADA tab. </p>"},{"location":"LFA/LFA%20Protocols/#experiment-validation","title":"Experiment Validation","text":"<p>Note</p> <p>All worklists must first be run in simulation mode to identify any potential problems before running the actual experiment. Use simulation mode to do the following: </p> <ul> <li>Verify run by watching the deck layout.</li> <li>Optional: verify run using the trace file.</li> <li>Optional and recommended: add animation in the method. The animation provides realistic virtual x, y, z visualization. Animation only applies for VENUS 4, and not for VENUS 6.</li> </ul> <ol> <li>To validate the worklist(s) generated for the experiment, first launch VENUS software </li> <li> <p>Using the three dots on the right-hand side of the relevant shortcut to access the menu, in either the \u201cFrequently Used\u201d portion of the window or the \u201cShortcuts\u201d section, select \u201cSimulate Method\u201d. Once selected, Run Control will open and prepare to run the method in simulation mode.  </p> <p> Figure 8. Navigation to enter Simulation Mode in VENUS 6 software. </p> </li> <li> <p>Confirm that the system is in simulation mode in the upper left corner of the window. Once confirmed, click the blue play button to begin the simulation. </p> <p> Figure 9. In Run Control, the mode can be viewed by noting the name listed next to \u201cInstrument\u201d.  In simulation mode, the programmed steps will not be sent to the machine itself. Instead they are sent to a virtual machine that simulates the entire method. In instrument mode, the programmed steps will be sent to the machine. All worklists should first be validated in simulation mode. </p> </li> <li> <p>The following setup pop-up will appear. Select the worklist file for this experiment by clicking on the \u201c\u2026\u201d button and navigating to the specific file. Once the worklist is loaded, the \u201cRun\u201d button will become active. Click \u201cRun\u201d. </p> <p>Note</p> <p>The worklist file must be a .csv file that ends with worklist.csv. If the file is of another type, the Hamilton software will not recognize it. </p> <p>Developer notes: The Hamilton Method was developed in collaboration with the Hamilton Apps team. It inputs a *worklist.csv file where each row in the document corresponds to one robot step. The method file is intended to be flexible for a range of experimental designs. More information about this document, called a \u201cworklist\u201d can be found in the RADA tab.</p> <p> Figure 10. Pop-up window once the method is started. Load the worklist file from a location on the local machine. Animation can be selected or deselected depending on operator preference. Click the \u201cRun\u201d button to start the operation.</p> </li> <li> <p>Tip counters will appear. Update the tip count for all tip types by clicking on the first available tip in each rack. Make sure to be precise. If there are not enough virtual tips, the Method will error.  For simulation, the best practice is to fill all locations of each tip type. This will inform the total number of tips that must be loaded onto the instrument when running the experiment. Click \u201cOK\u201d when done. </p> <p> Figure 11. Example pop-up windows that appear to indicate what tips are present on the deck. Make sure enough tips are loaded virtually to cover the steps written in the worklist. This can be checked in Simulation Mode.</p> </li> <li> <p>Run simulation and observe for any potential errors. </p> <p>Note</p> <ul> <li>Errors in the worklist can prevent the method from running to completion, and a notification will appear with information to fix the error. </li> <li>Common errors include having the wrong liquid class for the volume or dispense type selected, choosing a location that doesn\u2019t exist on the deck, or having incorrect group numbering. Other errors will allow the worklist to run without errors but still indicate a problem with the worklist. These errors are typically due to incorrectly noting the plate or well number on the deck. More information about these errors can be found in the Troubleshooting section.</li> <li>There are a few different windows that can be present during simulation.  It is recommended to focus on the \u201cInstrument\u201d window and the \u201cTraces\u201d window. These two windows will allow the operator to see what is happening and identify the cause of any potential error.  </li> </ul> <p>Note: The other optional windows that can be included in the simulation view are the \u201cActivities\u201d and \u201cScheduler\u201d windows, however these are not useful for the current methods.</p> <ul> <li>The length of the simulation will depend on the type and number of steps included in the worklist. </li> </ul> <p> Figure 12. Run Control when the method is running.</p> </li> <li> <p>Verification and troubleshooting: </p> <ul> <li>If everything ran correctly, a \u201cMethod Complete\u201d message will appear. If not, an error message will pop up. </li> <li>Note the error and open the logfile to get more information. Once the issue has been identified, refer to the DROP Troubleshooting: Quick Guide document for common problems and how to fix them. </li> </ul> </li> <li>Note the plate and tip locations. <ul> <li>If the run is completed successfully, note the location of the plates and tips used. </li> <li>It is recommended to take a screenshot and save it into a virtual laboratory notebook to assist with experimental set up. </li> </ul> </li> </ol> <p> Figure 13. Example screenshots of methods run on the Hamilton Method. An ideal screenshot will show both the number of tips used and the plate locations that are required.</p>"},{"location":"LFA/LFA%20Protocols/#run-experiment","title":"Run Experiment","text":"<ol> <li>Run daily maintenance. Before running an experiment. To do so, launch the Instrument Maintenence Program and follow the step by step instructions provided. </li> <li>If required, turn on the cooling pump at least 1 hour before the experiment to ensure that the carreirs have reached the required temperature. Make sure there is enough liquid in the chiller. </li> <li>Wipe down the deck with an appropriate cleaning solution. </li> <li>Add a new biohazard bag intot he waste container. </li> <li>Ensure there are no potential obstructions to the movement of the channels. </li> <li>Set up labware according to the deck layout as required by the corresponding Layout and Worklist files. </li> <li>Load pipette tips into their respective locations. The number of tips required can be determined from the simulation run. </li> <li>Load all reagents and materials onto the deck. Verify that each piece of labware fits correctly. </li> <li>Close the front shield of the instrument and verify there is no interference nearby. </li> <li>Open VENUS software and return to the Home Page in the Navigation Bar. Load the method by selecting the shortcut or by choosing from \"Run History\". </li> <li> <p>Confirm that VENUS software is in insturment mode by noting the name listed next to \"Instrument\" in the Run Control Window. </p> <p> Figure 14. The view in Run Control when an experiment has been started in instrument mode. Note the machine\u2019s ID to ensure that the system is connected to the Hamilton STAR.</p> </li> <li> <p>Select the blue play button to begin the run. </p> </li> <li> <p>The pop up shown in figure 10 will appear. Attach the worklist file that corresponds to the experiment and select \"Run\". </p> <p>Note</p> <p>The method can be run with or without animation when in instrument mode. </p> </li> <li> <p>Using the information gained from simulation mode, verify the number of tips loaded for the experiment. Update tip count for all tip types by selecting the first available tip in each rack. Make sure to be precise. Select \"ok\" when done. </p> </li> <li> <p>Run the method, watching the instrument and/or the trace for any potential errors. The first time a new worklist is run, stay by the instrument in case of an incident. Should a problem arise, select either the \u201cPause\u201d or \u201cAbort\u201d buttons in the run control window. </p> <p>Note</p> <p>Make sure there are enough pipette tips on the deck for the experiment programmed. The system will not notice that there are not enough tips until it runs out.   </p> </li> <li> <p>If an error message appears, refer to the Troubleshooting section for assistance. </p> </li> <li>Clean up:<ul> <li>Remove all consumables except for tips from the deck. </li> <li>Seal all plates (especially any plates containing template) and place immediately in biohazard. </li> <li>Remove biohazard bag, tie, and place immediately in biohazard bin. </li> <li>Spray down deck with ethanol and/or bleach (experiment/sample dependent)</li> <li>Clean up any spills and debris, as necessary. </li> <li>Turn off the cooling pump if used. </li> </ul> </li> </ol> <p>General Precautions</p> <ul> <li>Do not insert arms and hands when the robot is running. </li> <li>Do not switch tubes around once processing has begun. </li> <li>Do not reuse tips that have been discarded into the waste.</li> <li>Do not empty the tip waste while the instrument is running. </li> <li>Do not leave tips on the pipetting channels for extended periods (such as overnight).</li> <li>Shield the instrument from direct sunlight or intense artificial light. </li> <li>Do not place anything on the deck higher than 145mm above the deck\u2019s surface.</li> <li>Close the front cover during the run. The front cover is monitored by software and will abort the method if left open. </li> <li>Low volume (10\u00b5L) tips do not reach the deck or the bottom of sample tubes in standard sample carriers</li> <li>Load tips correctly. 50\u00b5L and 300\u00b5L tips have the same shoulder height and cannot be used interchangeably.</li> <li>Depending on the assay, certain chemistries are more stable on the deck when stored at 4\u00b0C than others. Additional chemistry specific testing may be required. </li> </ul>"},{"location":"LFA/LFA%20Protocols/#data-analysis","title":"Data Analysis","text":"<p>Analyze data as described in the LFA Software tab. Repeat process as required. </p>"},{"location":"LFA/LFA%20Software/","title":"LFA Software","text":""},{"location":"LFA/LFA%20Software/#custom-software","title":"Custom Software","text":""},{"location":"LFA/LFA%20Software/#method-and-layout-files","title":"Method and Layout Files","text":"<p> - RoboLFA Files</p> <p>The Hamilton Method designed by GH Labs was built with the goal of ultimate flexibility when it came to running LFA or NAAT experiment. The Method consists of 10+ Submethods that enable the user to input a worklist where every row is a single command being sent to the robot. These commands can include liquid movement, imaging, and plate movement (iSWAP specific) steps with the option to fix timing and grouping as needed. The LFA and NAAT methods are identical, but their layout files are different. Each implementation of the DROP system may require reconfiguration of the Layout file depending on the system. </p> <p>This deck layout was designed for running lateral flow assays and rapid diagnostic tests. These assay/tests can be in either strip or cassette form. There are specific holders for each so that their locations are consistent. For most LFAs, nesting tip racks (NTRs) can be used to maximize the available space on the deck for cassettes or strips. </p> <p>  Figure 1. Description  </p>"},{"location":"LFA/LFA%20Software/#plate-locations","title":"Plate Locations","text":"<p>The deck layout has been defined with the following labware in their respective positions. To use all of these deck locations, the Hamilton flat plate adapter needs to be added to locations 1-9. For most experiments, these will not be required as the only plates used will be in locations 11-14. </p> Updated Labware IDs Position # wells flat_reservoir_0003 1 1 flat_384_0003 2 384 flat_96_0003 3 96 dw_96_0003 4 96 empty 5 NA flat_reservoir_0002 6 1 flat_384_0002 7 384 flat_96_0002 8 96 dw_96_0002 9 96 empty 10 NA flat_reservoir_0001 11 1 flat_384_0001 12 384 flat_96_0001 13 96 dw_96_0001 14 96 empty 15 NA"},{"location":"LFA/LFA%20Software/#plate-information","title":"Plate Information","text":"<p>The deck layout has been defined with specific plates. More information about each plate type is included below. </p> Plate ID Description # wells Example Part #s flat_reservoir Reservoir for multichannel use. Requires high dead volume and therefore is not recommended for most uses. 1 Millipore Sigma # HS120637 or ThermoFisher # 15075 flat_384 Flat bottom plate with 384 wells. V and U bottom wells can also be used here. 384 Greiner Bio-One # 781900 or 781901 flat_96 Flat 96 well plate. V and U bottom plate can also be used here. 96 Greiner Bio-One # 650901, 651901, 655900, or 655901 dw_96 Deep well plate with 96 wells. 96 Greiner Bio-One #780261 or Hamilton #\u2019s 6471-01 and 235656 <p>The product information is for examples of plates and reservoirs that have been used previously. If the plate follows SBS plate format it should be functional in this plate layout. </p>"},{"location":"LFA/LFA%20Software/#pipette-tips","title":"Pipette Tips","text":"<p>The deck layout has been defined with the following pipette tips on the deck. </p> Pipette tips # racks on deck # tips on deck Locations Hamilton Product # 50 uL partial 1 96 A 235948, 235979 or 235978 50 uL full (NTR) 20 1,920 K, L, M, N, O 235987 300 uL partial 1 96 B 235903, 235937 or 235938 300 uL full (NTR) 20 1,920 F, G, H, I, J 235985 1000 uL partial 3 288 A 235905 or 235940"},{"location":"LFA/LFA%20Software/#lfa-holders","title":"LFA Holders","text":"<p>The deck layout has been defined with space for one of the following LFA or RDT holders positioned at a time. More information on these LFA holders can be found in the Software section for roboLFA.</p> LFa or RDT Holders Position # wells IVL_Plate_v2a_16strips_plastic_col_first_0001 to 012 LFA Bay Increments of 8 IVL_Plate_v3_96cassettes_ABformat_0001 LFA Bay 96 Plate_v3_80cassettes_0001 LFA Bay 80"},{"location":"LFA/LFA/","title":"LFA","text":""},{"location":"LFA/LFA/#robolfa-overview","title":"RoboLFA Overview","text":"<p>Lateral Flow Assays (LFAs) are a popular diagnostic technology that enables more sophisticated protein based chemistries to be run at or near the point of care. With low cost and ease of use, the LFA technology has been used for applications that span across a wide range of targets, including bacteria, viruses, toxins, and more. Even though the use of these tests is fairly straightforward, there can be a significant investment required to create high performance LFAs. </p> <p> Figure 1. Schematic of a classic LFA, from https://doi.org/10.1007/s00216-022-03897-9. The image depicts the materials involved in an LFA, which often includes a sample pad, a conjugate pad, a test membrane onto which a test and control ine are striped, and a wicking pad to drive flow (A). Typical use involves the addition of a sample and/or buffer to the sample pad, which flows downstream to rehydrate the conjugate dried into the conjugate pad (B). Liquid then moves into the test membrane onto which a test and/or control line will appear depending on whether analyte is present in the sample. All remaining liquid and unbound proteins then flow into the wicking pad. </p> <p>To address the time and monetary cost involved in LFA research and development, GH Labs developed a development platform utilizing an automated liquid handling system. This system, termed RoboLFA, is a subcategory of the DROP platform. RoboLFA consists of LFA specific hardware, software, and protocols to enable large optimization or characterization expriments with limited hands-on time required. The system is described in more detail in a paper by Anderson et al<sup>1</sup>. </p>"},{"location":"LFA/LFA/#custom-hardware","title":"Custom Hardware","text":"<p>LFAs can come in a few different forms. We have developed holders to address two of these forms, a strip and a cassette. Other form factors can be integrated, but may require additional development to get a holder that is compatible with both the form factor of the LFA and the form factor of the deck postiions on the Hamilton STAR. These holders may also be adapted to other liquid handling systems. </p> <p> Figure 2. Image of the developed LFA strip (A), (B), and (C), and cassettes (D) from https://doi.org/10.1007/s00216-022-03897-9</p>"},{"location":"LFA/LFA/#robolfa-strip-holder","title":"RoboLFA Strip Holder","text":"<p>An LFA strip holder is helpful when a cassette has not yet been designed or the LFA dimensions are still requiring adjustment. Some LFAs on the market are in strip form, such as Milenia Biotec HybriDetect Universal Lateral Flow Assays and over-the-counter HCG tests, and therefore would stay in this category throught the entire research and development lifecycle. On this site we will mostly discuss our most commonly used strip holder, which consists of the following:</p> <ul> <li>Aluminium plate (dimensions) with six holes compatible with (size) screws  </li> <li>3D printed base plate designed to fit the dimensions of the LFA  </li> <li>3D printed top plate designed with necessary pinch points, wells for reagent addition, and read window   </li> <li>6 Screws (size)</li> </ul> <p>When starting a new RoboLFA effort, it is critical to understand the requirements for a strip holder. This includes the length and width of the strip, the location and thickness of pinch points, the location and volume required for reagent addition, and the location and size of the read window. Each of these factors can be modified in the CAD files linked below. More detailed instructions can be found here. </p> <p> Figure 2. Strip holder to hold non-cassetted LFAs. The designed holder consists of three parts, (1) an aluminum base plate, (2) 3D brinted base plate and (3) 3D printed top plate. The bottom plate is designed with guide posts for consistent placement of a strip, while the top plate is designed to have pinch points and wells where required. Image from https://doi.org/10.1007/s00216-022-03897-9</p> <p>CAD files can be found here: </p> <p>We have two other versions of the strip holder that have some usability issues that need to be addressed. The other two strip holders are either challenging to set up reproducibly or require additional engineering on the clamping mechanism. More details about both of these holders can be found in the supplemental material.  If we were to get additional time to further improve the strip holders, the most exciting holder is the lego inspired assembly that allows for different 3D printed cross bars to be added interchangeably in 0.5mm increments along the length of the holder. </p>"},{"location":"LFA/LFA/#robolfa-cassette-holder","title":"RoboLFA Cassette Holder","text":"<p>An LFA cassette holder is used when the strip dimensions have been locked and is further along the R&amp;D pipeline. The cassette holder has defined spacing, allowing for precise liquid delivery and imaging across a large number of LFA devices.  </p> <p>The cassette holder consists of:  </p> <ul> <li>A 1/4\" aluminum plate (40 x 48 cm) with the following modifications  <ul> <li>Two pins to guide the acrylic sheet in place  </li> <li>Two drilled holes (dimensions) that enable consistent placement of the cassette holder onto the Hamilton Deck  </li> </ul> </li> <li>A 1/16\" acrylic sheet (40 x 48 cm) with the following modifications<ul> <li>Laser cut to fit the cassette dimensions (example CAD files fit 80 and 96 cassettes respectively)</li> <li>Two pin holes to guide ont othe aluminum plate </li> </ul> </li> </ul> <p> Figure 3. Holder for cassetted LFAs. The designed holder consists of two parts, (1) an aluminum base plate, (2) a laser cut acrylic sheet designed to fit cassettes with little \"wiggle room\".  Image from https://doi.org/10.1007/s00216-022-03897-9</p> <p>CAD link:</p> <p>The cassette holder requires two additional custom parts: </p> <ul> <li>Hamilton Carrier (product #) with posts (modification) in one slot  - ADD GITHUB LINK</li> <li>Alignment spacers to assist with consistent placement of cassette holder <ul> <li>Spacer 1 - ADD GITHUB LINK</li> <li>Spacer 2 - ADD GITHUB LINK</li> </ul> </li> </ul> <p>CAD link: </p>"},{"location":"LFA/LFA/#deck-build","title":"Deck build","text":"<p>Images of deck build with both the LFA strip holder and the cassette holder </p>"},{"location":"LFA/LFA/#custom-software","title":"Custom Software","text":""},{"location":"LFA/LFA/#hamilton-method-and-layout","title":"Hamilton Method and Layout","text":"<p>Link to github page</p>"},{"location":"LFA/LFA/#rada","title":"RADA","text":"<p>link to RADA page? </p>"},{"location":"LFA/LFA/#lfa-image-analysis","title":"LFA image analysis","text":"<p>Link to github page</p>"},{"location":"LFA/LFA/#running-an-lfa-experiment","title":"Running an LFA experiment","text":""},{"location":"LFA/LFA/#adjusting-hardwarelabware-for-stripcassette","title":"Adjusting hardware/labware for strip/cassette","text":""},{"location":"LFA/LFA/#adjusting-rada-for-strip","title":"Adjusting RADA for strip","text":""},{"location":"LFA/LFA/#adjusting-imaging-for-strip","title":"Adjusting imaging for strip","text":""},{"location":"LFA/LFA/#optimizing-liquid-classes","title":"Optimizing liquid classes","text":"<p>The DROP system has a library of liquid classes that can be used to run experiments. These liquid classes are modified to have the precise pipetting protocol to enable consistent pipetting for a given liquid class. It is important to precisely tune a liquid class for the liquids that will be pipetted during an experiment on the DROP system. Some of the parameters that are included are flow rate, air transport volume, blowout volume, settling time, and more. More information can be found in the CO-RE Liquid Editor Help section. Liquid classes can be made using the Hamilton Liquid Verification Kit (LVK). When more liquid classes are made, or when an existing liquid class is validated for a new liquid, they will undergo performance qualification. The list below includes liquid classes used commonly for the LFA system. </p> Liquid Class Tip size Dispense Type Recommended validation for: RoboLFA_tip50_spot_JetEmpty 50 JetEmpty Antibody and conjugate solutions"},{"location":"LFA/LFA/#experiment-checklist","title":"Experiment Checklist","text":"<p>A. Preparing for the experiment: - Design experimental protocol - Design, source, and build LFA components - Identify and define additional liquid classes or hardware requirements within the Hamilton software, if needed  - Source appropriate reagents, pipette tips, plates, LFAs, and custom LFA-specific hardware - Generate experiment worklist file  - Validate worklist file in simulation mode within the Hamilton software - Make modifications to worklist as needed  - Note plate locations and number of tips used B. Running the experiment: - Prepare Hamilton STAR instrument deck  - Spray down deck with cleaning solution - Complete Daily Maintenance. Skip, if already completed for the day.  - Load all required tips onto instrument - Load reagents and samples into corresponding plates   - Place all reagent plates, sample plates, LFAs and associated custom LFA-specific hardware onto Hamilton STAR instrument deck - Run worklist(s) on Hamilton STAR using Hamilton software C. Finalizing experiment: - Verify data has been acquired and saved in appropriate folders - Clean up Hamilton STAR instrument deck, reusable custom LFA-specific hardware, and dispose of materials appropriately - Analyze data using GH Labs image analysis software - Prepare documentation of results and analysis   </p>"},{"location":"LFA/LFA/#references","title":"References","text":"<p>[1] Anderson, C.E., Huynh, T., Gasperino, D.J. et al. Automated liquid handling robot for rapid lateral flow assay development. Anal Bioanal Chem 414, 2607\u20132618 (2022). https://doi.org/10.1007/s00216-022-03897-9  [2] Cate, D. M., Bishop, J. D., Hsieh, H. V., et al. Antibody Screening Results for Anti-Nucleocapsid Antibodies Toward the Development of a Lateral Flow Assay to Detect SARS-CoV-2 Nucleocapsid Protein. ACS Omega 2021 6 (39), 25116-25123. DOI: 10.1021/acsomega.1c01253   [3] Cantera, J. L., Cate, D. M., Golden, A., et al. Screening Antibodies Raised against the Spike Glycoprotein of SARS-CoV-2 to Support the Development of Rapid Antigen Assays. ACS Omega 2021 6 (31), 20139-20148. DOI: 10.1021/acsomega.1c01321 </p>"},{"location":"LFA/RADA/","title":"RADA","text":"<p> - RADA App Frontend    - RADA App Backend   - RADA App Deployment </p> <p>The RADA Web Application was designed to improve the user experience with generating worklists. For this web application, the user inputs their experimental details at a higher level, and the software outputs the corresponding worklist file(s) and instructions on how to load the deck with the appropriate reagents. </p> <p>There are three different Github repos associated with RADA, the frontend, backend, and deployment. All three are required to deploy the web application. The Deployment Repo contains all necessary information to deploy the RADA web app. </p> <p>  Figure 1. Description  </p>"},{"location":"LFA/RADA/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"NAAT/NAAT%20Example%20Efforts/","title":"Example Efforts","text":"<p>The DROP system offers broad utility for research and development efforts focused on NAAT assays. Its specialized module, affectionately named RoboNAAT, has been designed to support large-scale experiments for both PCR and isothermal amplification methods. This document includes an example effort involving a SARS-CoV-2 Loop-Mediated Isothermal Amplification (LAMP) assay, demonstrating the platform\u2019s capabilities in streamlining assay optimization and characterization.</p> <p>Loop-Mediated Isothermal Amplification (LAMP) is an isothermal amplification technique that uses 4 to 6 primers to target and amplify DNA or RNA at a constant temperature, typically between 60\u201365\u00b0C. The method employs a strand-displacing DNA polymerase, which enables efficient amplification without the need for thermal cycling. Unlike PCR, which generates a predictable and uniform amplicon, LAMP produces a variety of complex amplicon structures. This structural diversity offers advantages\u2014such as increased amplification probability\u2014but also presents challenges, including a higher risk of off-target amplification.</p> <p>Given the complexity of LAMP chemistry, it is well-suited for optimization using the RoboNAAT system. Traditional one-factor-at-a-time (OFAT) approaches may not fully capture the intricate interactions within a LAMP assay. In this example, the RoboNAAT platform is used to demonstrate: (1) Mastermix optimization, (2) additive screening, and (3) assay evaluation are all demonstrated with their example worklists and results. </p> <p> Figure 1. High level overview of the NAAT optimization efforts described in this page. The efforts were broken into (1) mastermix optimization, (2) additive screening and (3) performance evaluation. </p>"},{"location":"NAAT/NAAT%20Example%20Efforts/#lamp-mastermix-optimization-effort","title":"LAMP Mastermix Optimization Effort","text":""},{"location":"NAAT/NAAT%20Example%20Efforts/#experimental-design","title":"Experimental Design","text":"<p>The first step in the optimization process for the SARS-CoV-2 LAMP assay was to optimize the best reagents and optimal concentrations for:</p> <ul> <li>Polymerase (NEB BST 2.0 or 3.0)</li> <li>Reverse transcriptase (Omniscript RT or NEB WarmStart RTx)</li> <li>Primer sets (L1, L3, and L5)</li> <li>Magnesium </li> </ul> <p>A Definitive Screening Design (DSD) was employed to identify reagent conditions that yielded the fastest time-to-positive without increasing off-target amplification. Using JMP software, the estimated statistical power for all tested variables ranged between 0.99 - 1, indicating high confidence in the results.</p> <p>The starting mastermix conditions, based on recommendations from New England Biolabs (NEB), were used as a control and included on every plate. In total, 84 mastermix formulations were tested\u2014including the control\u2014across six PCR plates. For each mastermix, four technical replicates were run for both negative controls and positive samples (1,000 copies/\u00b5L).</p>"},{"location":"NAAT/NAAT%20Example%20Efforts/#reagent-preparation","title":"Reagent Preparation","text":"<p>Three LAMP primer sets were designed using Geneious software and published sequences of the SARS-CoV-2 genome. Primers were ordered from IDT. </p> <p>Reagents required for this effort included:</p> <ul> <li>10X Isamp buffer</li> <li>MgSO4 diluted to 100mM working stock</li> <li>dNTP mix (NEB)</li> <li>Nuclease free water</li> <li>Evagreen (20X)</li> <li>NEB BST 2.0 and 3.0</li> <li>Omniscript and NEB Warmstart RT</li> <li>Primers (IDT)</li> <li>PCR plates</li> <li>PCR plate seals </li> </ul>"},{"location":"NAAT/NAAT%20Example%20Efforts/#worklist-preparation-and-validation","title":"Worklist Preparation and Validation","text":"<p>Worklists were prepared to run the experiment as designed by JMP. This effort was run using 96 well plates and prepared two at a time. The worklists for preparing the mastermix and aliquoting sample were seperated to enable sample preparation to occur while the mastermix is being run. This effort could be accelerated by using a 384 well plate or if there are more thermocyclers available. </p> <p>Run 1 Make, mix, and aliquot mastermix Aliquot Sample</p> <p>Run 2 Make, mix, and aliquot mastermix Aliquot Sample</p> <p>Run 3 Make, mix, and aliquot mastermix Aliquot Sample</p> <p>Run 4 Make, mix, and aliquot mastermix Aliquot Sample</p> <p>For all four of these runs, they have similar deck layouts. Examples of the wells and plates used for both worklist types are in the images below. </p> <p> Figure 2. Deck layout from the make, mix, and aliquot worklist after running in simulation. </p> <p> Figure 3. Deck layout from the sample aliquot worklist after running in simulation. </p> <p>All reagent plates were prepared with the reagents detailed in the worklist viewer in the RADA app. This includes all mastermix components and samples (negative and positive). Tips were loaded onto the deck corresponding to the number identified in the simulation run. The validated worklist(s) were then run on the Hamilton STAR using the VENUS software.</p>"},{"location":"NAAT/NAAT%20Example%20Efforts/#results-and-conclusions","title":"Results and Conclusions","text":"<p>From this screening effort, 31 master mix formulations demonstrated improved performance compared to the control. </p> <p> Figure 4. Snapshot of the data generated from the Definitive Screening Design to identify optimized conditions for the SARS-CoV-2 LAMP assay. </p> <p>Three key trends emerged:</p> <ul> <li>Increasing reverse transcriptase concentration had minimal impact on time-to-result across all three primer sets tested.</li> <li>Bst 3.0 polymerase enhanced reaction speed for primer set 1, but showed no significant benefit for sets 3 or 5.</li> <li>Primer sets 1 and 3 amplified more efficiently at 7 mM Mg\u00b2\u207a, whereas set 5 did not exhibit a strong response to this condition.</li> </ul> <p>This comprehensive evaluation of over 80 master mix formulations provided deeper insight into LAMP assay behavior. The two top-performing assay conditions were selected for further testing and validation.</p>"},{"location":"NAAT/NAAT%20Example%20Efforts/#lamp-additive-screening-effort","title":"LAMP Additive Screening Effort","text":""},{"location":"NAAT/NAAT%20Example%20Efforts/#experimental-design_1","title":"Experimental Design","text":"<p>The Additive Screening round aimed to evaluate the impact of various additives on assay speed, inhibitor tolerance, and stability. Most additives tested fell into one of three functional categories:</p> <ol> <li>Stability and blocking agents</li> <li>Crowding agents</li> <li>Melting temperature (Tm) and secondary structure reducers</li> </ol> <p>Due to the distinct roles of each category, the experimental design included two approaches:</p> <ul> <li>Each additive was evaluated individually at two concentrations.</li> <li>A Definitive Screening Design (DSD) was used to assess combinations of additives within the stability and blocking category. </li> </ul>"},{"location":"NAAT/NAAT%20Example%20Efforts/#reagent-preparation_1","title":"Reagent Preparation","text":"<p>In addition to the reagent preparation described in the previous effort, a long list of additives and crowding agents were identified for screening. These reagents include:</p> <p>Stability agents:</p> <ul> <li>Sucrose</li> <li>Trehalose </li> <li>BSA</li> </ul> <p>Crowding agents:</p> <ul> <li>PEG (1000, 3000, and 8000)</li> <li>Ficoll (400)</li> <li>Dextran (12k, 80k, and 410k)</li> </ul> <p>Tm and secondary structure reducers:</p> <ul> <li>Formamide</li> <li>Betaine</li> <li>DMSO</li> <li>SSBs </li> </ul> <p>Miscellaneous:</p> <ul> <li>ATP</li> <li>Guanidine</li> <li>EDTA</li> </ul>"},{"location":"NAAT/NAAT%20Example%20Efforts/#worklist-preparation-and-validation_1","title":"Worklist Preparation and Validation","text":"<p>The additive screening was split into three robot runs, preparing two 96 well plates each run. Examples of the worklists are included below for the first two runs. </p> <p>Run 1 Make, mix, and aliquot mastermix Aliquot Sample</p> <p>Run 2 Make, mix, and aliquot mastermix Aliquot Sample</p>"},{"location":"NAAT/NAAT%20Example%20Efforts/#results-and-conclusions_1","title":"Results and Conclusions","text":"<p>The additive screening approach provided valuable insights into factors that influence time to amplification, off-target amplification, and tolerance to stability agents\u2014particularly those relevant for lyophilization. </p> <p> Figure 5. Snapshot of the data generated from the Additive Screening to identify optimized conditions for the SARS-CoV-2 LAMP assay. </p> <p>The quantity of data generated in such a short amount of time highlighted the need for good processes for data analysis and interpretation. Some example observations that were made are included below. </p> <p>Stability agents:</p> <ul> <li>Trehalose and sucrose slowed the reaction slightly at 2.5%, but performance was restored at higher concentrations (5%). </li> <li>BSA at 2% destabilized the reaction and increased variability.</li> </ul> <p>Crowding agents: </p> <ul> <li>The crowding agents tested mostly lead to a decrease in time to result (improvements ranging from 5 to 15 cycles for conditions tested), however some conditions had an increase in variability across replicates or an increase in off-target amplification in the negative controls.</li> <li>The best improvement was seen from the addition of PEG1K and Dextran 410K, which had average reduction in CT of 15 (with NTCs coming up at ~ 92 cycles) and 15 (w/o NTCs coming up) respectively. </li> </ul> <p>Secondary structure, Tm reducers, and others: </p> <ul> <li>Formamide slowed reaction speed by ~10 cycles.</li> <li>Betaine at 40mM had no significant impact on the assay, while 100mM slowed the reaction slightly.</li> <li>DMSO had no significant impact on assay at 2 or 5%.</li> <li>EDTA at 0.5 and 1.5mM inhibited amplification entirely. This was a surprising result as this reagent has worked great for another LAMP mastermix. </li> </ul>"},{"location":"NAAT/NAAT%20Example%20Efforts/#lamp-performance-evaluation","title":"LAMP Performance Evaluation","text":""},{"location":"NAAT/NAAT%20Example%20Efforts/#experimental-design_2","title":"Experimental Design","text":"<p>The top mastermix condition as determined by the efforts from mastermix concentration optimization and additive screening was evaluated using an LOD against the starting mastermix. The two conditions are:</p> <ul> <li>Start mastermix: 1X RT, 1X BST 2.0, 8mM Mg</li> <li>Optimized mastermix: 1.25X RT, 1.25X BS 2.0, and 7mM Mg </li> </ul> <p>To generate enough data for the LOD, 8 replicates were run at each concentration tested ranging from 25 - 500 input copies. This range had previously been identified as the dynamic range in which the LOD was likely to be determined.  </p> <p> Figure 6. Informational graphic describing the important concentrations in determining the LOD of an assay. From https://doi.org/10.1016/j.watres.2016.03.026 </p>"},{"location":"NAAT/NAAT%20Example%20Efforts/#reagent-preparation_2","title":"Reagent Preparation","text":"<p>This effort used the same reagents as the mastermix optimization and additive screening efforts. </p>"},{"location":"NAAT/NAAT%20Example%20Efforts/#worklist-preparation-and-validation_2","title":"Worklist Preparation and Validation","text":"<p>The performance evaluation was completed with a single robot run. </p> <p> Make, mix, and aliquot mastermix</p> <p> Aliquot Sample</p>"},{"location":"NAAT/NAAT%20Example%20Efforts/#results-and-conclusions_2","title":"Results and Conclusions","text":"<p>From this evaluation, it was identified that the optimized mastermix had a 20 fold improvement in LOD as compared to the starting mastermix, with the optimized mastermix and starting mastermix having LODs of 25 and 500 copies/reaction respectively. This is a significant improvement, and was possible after only a couple weeks of hands on work. Additional optimization efforts in a smaller experimental space may provide even more benefits to LOD and/or time to detection. </p> <p> Figure 7. Example data from an LOD effort comparing the starting LAMP mastermix to the roboNAAT optimized one. In this effort, the LOD was improved 20-fold from the NEB recommended LAMP conditions. </p> <p>While this effort only ran 8 replicates for each concentration, the roboNAAT system has also been used to run probit analyses comparing the performance of different mastermixes. A probit analysis typically requires 20 replicates run for each concentration, which can be very challenging to set up manually. </p> <p>These efforts, which included mastermix optimization, additive screening, and performance evaluation, are all pieces required when making a NAAT assay. By streamlining and automating these protocols, it is possible to gain more information about a chemistry in less time than using the traditional manual methods. This is particularly powerful as new isothermal amplification methods are developed, to inform research and development efforts and (hopefully) support products making it to market faster. </p>"},{"location":"NAAT/NAAT%20Hamilton%20Files/","title":"NAAT Hamilton Files","text":"<p> - RoboNAAT Hamilton Method and Layout File </p> <p>The Hamilton Method, developed by GH Labs, was designed to offer maximum flexibility for executing LFA and NAAT experiments. It comprises over ten modular submethods, allowing users to input a worklist where each row represents a discrete command sent to the robot. These commands may include liquid handling, imaging, and plate movement steps (specific to iSWAP), with configurable options for timing and grouping.</p> <p>While the core method remains identical for both LFA and NAAT workflows, they differ in their layout files. Each implementation of the DROP system may require customization of the layout file to accommodate system-specific configurations.</p> <p>This deck layout was specifically designed to support NAAT and other well-based assays. For most NAAT workflows, the use of filter tips is critical to minimize the risk of cross-contamination and ensure assay integrity.</p> <p>  Figure 1. Deck layout for RoboNAAT. Specific information about each deck location can be found in the tables below. Modifications can be made to the deck layout in VENUS software.  </p>"},{"location":"NAAT/NAAT%20Hamilton%20Files/#plate-locations","title":"Plate Locations","text":"<p>The deck layout has been defined with the following labware in their respective positions. To use all of these deck locations, the Hamilton flat plate adapter needs to be added to locations 1-9. For most experiments, these will not be required as the only plates used will be in locations 11-14. </p> Updated Labware IDs Position # wells flat_96_0001 1 96 flat_96_0002 2 96 dw_96_0001 3 96 dw_96_0002 4 96 flat_96_0003 5 96 pcr_96_0001 6 96 pcr_96_0002 7 96 pcr_96_0003 8 96 pcr_96_0004 9 96 pcr_96_0005 10 96 pcr_384_0001 9 384 pcr_384_0002 10 384 template_96_0001 11 96 template_96_0001 12 96"},{"location":"NAAT/NAAT%20Hamilton%20Files/#plate-information","title":"Plate Information","text":"<p>The deck layout includes a defined set of plate types, each assigned to specific positions. Detailed information about each plate type is provided below to support proper setup and execution of assays.</p> Plate ID Description # wells Example Part #s flat_96 Flat 96 well plate. V and U bottom plate can also be used here. 96 Greiner Bio-One # 650901, 651901, 655900, or 655901 dw_96 Deep well plate with 96 wells. 96 Greiner Bio-One #780261 or Hamilton #\u2019s 6471-01 and 235656 pcr_96 PCR plate with 96 wells. 96 Hamilton #814302 or Biorad HSP9601 pcr_384 PCR plate with 384 wells. 384 Hamilton #814305 or Biorad HSP3801 template_96 PCR plate with 96 wells (for template ONLY) 96 Same as pcr_96 <p>The product information includes examples of plates and reservoirs that have been successfully used in previous experiments. As long as the plate conforms to the SBS (Society for Biomolecular Screening) format, it should be compatible with this deck layout.</p>"},{"location":"NAAT/NAAT%20Hamilton%20Files/#pipette-tips","title":"Pipette Tips","text":"<p>The deck layout has been defined with the following pipette tips on the deck. </p> Pipette tips # racks on deck # tips on deck Locations Hamilton Product # 50 uL partial 4 384 D, E, I, J 235948 or 235979 50 uL full 5 480 P, Q, R, S, T 235948 or 235979 300 uL partial 4 384 D, C, G, H 235903 or 235938 300 uL full 5 480 K, L, M, N, O 235903 or 235938 1000 uL partial 1 96 A 235905 or 235940 1000 uL full 1 96 F 235905 or 235940"},{"location":"NAAT/NAAT%20Hardware/","title":"Hardware","text":"<p>Custom hardware is not required to run NAAT assays, as the Hamilton STAR system is already equipped to handle both tube- and plate-based workflows. For enhanced flexibility, we\u2019ve included CAD files below that allow for the modification of commercially available cooling blocks to accommodate 0.5\u20132 mL tubes. These modified blocks are compatible with the Hamilton cooling deck, enabling efficient temperature control without the need for proprietary components.</p> <p> - CAD Files</p> <p>Table 1. Modifications to heating/cooling blocks to enable alignment on cooling deck. </p> No. File Name Description Vendor Part No. Qty Modified Link 1 047295.SLDPRT 2 mL tube holder block NA NA 1 Holes for alignment posts Hamilton #188035 2 047296.SLDPRT 0.5 mL tube holder block NA NA 1 Holes for alignment posts Hamilton #188035"},{"location":"NAAT/NAAT%20Overview/","title":"Overview","text":"<p>Nucleic acid amplification tests (NAAT) are another diagnostic chemistry that enables detection of nucleic acids, which includes DNA and RNA. NAAT assays are characterized by their high sensitivity and ability to detect a wide array of pathogens. The most commonly used NAAT chemistry is polymerase chain reaction (PCR), which relies on a polymerase and temperature cycling to amplify nucleic acid to a detectable level. PCR has been well characterized, which helps to streamline the assay development process. </p> <p>There has been a push in recent years towards isothermal amplification methods as alternatives to PCR, which reduces the need for complex thermocycling equipment. Some isothermal methods include loop mediated amplification (LAMP), strand displacement amplification (SDA), recombinase polymerase amplification (RPA), among others. These methods use some combination of enzymes to replicate DNA at lower temperatures than PCR. LAMP, for example, relies on a strand displacement polymerase and a combination of primers and probes that allows for the amplification of a target between 60-65\u00b0C. </p> <p> Figure 1. Schematic of a classic nucleic acid amplification test that relies on one or two enzymes to amplify a target sequence. </p> <p>While an PCR is a highly well characterized chemistry, the same cannot be said for many isothermal amplification methods. There are a lot of components that go into the optimization process for these chemistries. This includes, but is not limited to: </p> <ol> <li>Primer/probe sequences </li> <li>Reagent identity concentration optimization </li> <li>Additives or inhibitors screening </li> <li>Reproducibility and repeatability testing </li> <li>Limit of detection/probit analysis</li> </ol> <p>To address the time and monetary cost involved in NAAT research and development, GH Labs developed a development platform utilizing an automated liquid handling system. This system, termed RoboNAAT, is a subcategory of the DROP platform. RoboNAAT consists of NAAT specific software and protocols to enable large optimization or characterization expriments with limited hands-on time required. Additional information on how to implement and/or modify this system is found in the respective sections for Hardware, Software, Protocols, and Example Efforts. </p>"},{"location":"NAAT/NAAT%20Overview/#references","title":"References","text":"<p> [1]  Oliveira, B., Veigas, B. Baptista, P. (2021). Isothermal Amplification of Nucleic Acids: The Race for the Next \"Gold Standard\". Fronteirs in Sensors, 2. https://doi.org/10.3389/fsens.2021.752600 [2]  Notomi, T., Okayama, H., Masubuchi, H., et al. (2000). Loop-mediated isothermal amplification of DNA. Nucleic Acids Research, 28(12), e63. https://doi.org/10.1093/nar/28.12.e63 </p>"},{"location":"NAAT/NAAT%20Protocols/","title":"Protocols","text":"<p>The DROP workflow, diagrammed in Figure 1 below, includes experimental design, experiment setup, experiment validation, running the experiment, and data analysis. This document specifically covers the procedures for Steps 3 and 4: experiment validation and running the experiment. Additional information about assay specific worklist generation and data analysis can be found in their respective pages. </p> <p> Figure 1. High level overview of the DROP workflow. This workflow includes (1) Experimental design (2) Experiment setup (3) Experiment validation (4) Running an experiment and (5) Data analysis. In most applications, futher iteration would continue until product criteria are met.  </p>"},{"location":"NAAT/NAAT%20Protocols/#experiment-checklist","title":"Experiment Checklist","text":"<p>A. Preparing for the experiment: </p> <ol> <li>Design experimental protocol  </li> <li>Define or specify any additional liquid classes, labware or hardware definitions needed</li> <li>Source all necessary reagents, pipette tips, devices and plates  </li> <li>Generate worklist    </li> <li>Validate worklist in simulation   </li> <li>Make modifications to worklist based on simulation results, as needed Note plate locations and number of tips used</li> </ol> <p>B. Running the experiment: </p> <ol> <li>Prepare instrument deck   </li> <li>Start refrigerated circulator (if required)  </li> <li>UV treat and/or spray down deck with cleaning solution  </li> <li>Complete Daily Maintenance. Skip, if already completed for the day.  </li> <li>Load all required tips onto instrument  </li> <li>Load reagents into reagent plates in PCR hood   </li> <li>Load all reagent and assay plates required to run experiment onto Hamilton STAR  </li> <li>Run worklist(s) on Hamilton STAR   </li> <li>Seal assay plate(s)  </li> <li>Vortex briefly and spin down assay plate(s)  </li> <li>Place assay plate(s) onto thermocycler, load corresponding protocol and run  </li> </ol> <p>C. Finalizing experiment: </p> <ol> <li>Clean deck and dispose of materials appropriately  </li> <li>Analyze data   </li> <li>Repeat as needed   </li> </ol>"},{"location":"NAAT/NAAT%20Protocols/#experimental-design","title":"Experimental design","text":"<p>A NAAT effort on the DROP system begins with reagent preparation for the selected assay. Typically, this starts with the formulation of a master mix, which include buffers, enzymes, primers, probes, and dNTPs. This master mix is prepared, mixed, and aliquoted into an experiment plate using the Hamilton STAR system.</p> <p>To initiate a RoboNAAT workflow, primers and probes specific to the target of interest are first designed. Next, appropriate samples are selected for assay optimization and testing. Finally, the experimental framework is defined by establishing the scope, controls, and key variables.</p> <p> Figure 2. Examples of variables that can be optimized using the RoboNAAT system. </p> <p>Design of experiment (DoE) describes an approach to systematically and efficiently study the effects of input variables on a process and its outputs [1]. This approach has been widely applied across disciplines, from traditional engineering applications to polymerase chain reaction. The precision and repeatability of an automated liquid handling robot like the Hamilton STAR significantly expands the possibilities for experimental design. </p> <p>Leveraging this capability, GH LAbs has explored DoE strategies, including the Taguchi Method and Definitive Screening Design, to optimize and develop assay and evaluate performance. When planning a RoboNAAT experiment, selecting an appropriate experimental design is critical to ensure sufficient statistical power for informed decision-making. There are a number of groups who have published on the use of Taguchi for PCR applications, two selected manuscripts are Cobb et al 1994 and Celani de Souza et al 2011. </p>"},{"location":"NAAT/NAAT%20Protocols/#experiment-setup","title":"Experiment Setup","text":"<p>Setup for a NAAT experiment involves the preparation of the working stock of all materials required to run the designed experiment. </p> <p> Figure 3. Example workflow automated by RoboNAAT. </p>"},{"location":"NAAT/NAAT%20Protocols/#adjusting-hardwarelabware","title":"Adjusting hardware/labware","text":"<p>Most NAAT efforts use basic labware definitions, such as PCR plates, deep well plates, and tubes. These definitions come with the Hamilton software, and the only adjustments that are typically required are to dial in the labware locations in the Hamilton Layout file. </p>"},{"location":"NAAT/NAAT%20Protocols/#optimizing-liquid-classes","title":"Optimizing liquid classes","text":"<p>The DROP system has a comprehensive library of liquid classes designed to support a wide range of experimental workflows. Each liquid class is configured with precise pipetting parameters to ensure consistent and accurate liquid handling. Proper tuning of these parameters is critical for reliable performance, especially when working with diverse reagents in NAAT workflows. Key parameters that can be adjusted include the flow rate, air transport volume, blowout volume, settling time, etc. </p> <p>Information on configuring and modifying liquid classes is available in the CO-RE Liquid Editor Help section. New liquid classes can be created and validated using the Hamilton Liquid Verification Kit (LVK). When a new liquid class is developed or an existing one is validated for a different reagent, it undergoes performance qualification to ensure it meets experimental requirements. Below is a list of commonly used liquid classes for NAAT workflows on the DROP system.</p> Liquid Class Tip size Dispense Type Recommended validation for: RoboNAAT_tip50_buffer_SurfaceEmpty 50 Surface Empty Water, 10X Reaction buffers, 100mM magnesium RoboNAAT_tip300_buffer_JetEmpty 300 Jet Empty Water, 10X IsoAmp buffers, 100mM magnesium RoboNAAT_tip300_buffer_SurfaceEmpty 300 Surface Empty Water, 10X IsoAmp buffers, 100mM magnesium RoboNAAT_tip50_primers_SurfaceEmpty 50 Surface Empty Primers, dNTPs, gDNA RoboNAAT_tip300_primers_SurfaceEmpty 300 Surface Empty Primers, dNTPs, gDNA RoboNAAT_tip50_enzymes_SurfaceEmpty 50 Surface Empty Any enzyme in 50% glycerol, other related viscous liquids RoboNAAT_tip300_enzymes_SurfaceEmpty 300 Surface Empty Any enzyme in 50% glycerol, other related viscous liquids RoboNAAT_tip1000_water_JetEmpty 1000 Jet Empty Water RoboNAAT_tip1000_water_SurfaceEmpty 1000 Surface Empty Water RoboNAAT_tip50_template_SurfaceEmpty 50 Surface Empty RNA or DNA template RoboNAAT_tip50_organics_SurfaceEmpty 50 Surface Empty Ethanol RoboNAAT_tip50_detergent_SurfaceEmpty 50 Surface Empty 5% Triton X-100, Tween-20, and PVP RoboNAAT_tip50_buffer_JetEmpty 50 Jet Empty Aliquoting full mastermix <p>Note</p> <p>Best practices recommend including the date and liquid class version in the validated liquid class documentation.</p> <p>Once the above activities have been completed, the system is ready to run a NAAT experiment. An example checklist detailing the entire workflow can be found at the top of this page. </p>"},{"location":"NAAT/NAAT%20Protocols/#generate-worklists","title":"Generate worklist(s)","text":"<p>Worklists can be generated using the Robotic Assay Development Application (RADA) or manually. Instructions for making a worklist using either method can be found in the RADA tab. </p>"},{"location":"NAAT/NAAT%20Protocols/#experiment-validation","title":"Experiment Validation","text":"<p>Note</p> <p>All worklists must first be run in simulation mode to identify any potential problems before running the actual experiment. Simulation mode allows you to: </p> <ul> <li>Verify run by watching the deck layout.</li> <li>Optional: verify run using the trace file.</li> <li>Optional and recommended: enable animation in the method. The animation provides realistic virtual x, y, z visualization. Animation only applies when using VENUS 4. VENUS 6 does not currently have animation capabilities. </li> </ul> <ol> <li>To validate the worklist(s) generated for the experiment, first launch VENUS software </li> <li> <p>Locate the relevant shortcut in either the \u201cFrequently Used\u201d section or the \u201cShortcuts\u201d panel. Click the three dots on the right-hand side of the shortcut to open the menu. Select \u201cSimulate Method\u201d from the drop down. Once selected, Run Control will launch to execute the method in simulation mode. </p> <p> Figure 4. Navigation to enter Simulation Mode in VENUS 6 software. </p> </li> <li> <p>Confirm that the system is in simulation mode, this will be indicated in the upper-left corner of the window. Once confirmed, click the blue play button to begin simulation.</p> <p> Figure 5. In Run Control, the mode can be viewed by noting the name listed next to \u201cInstrument\u201d.  In simulation mode, the programmed steps will not be sent to the machine itself. Instead they are sent to a virtual machine that simulates the entire method. In instrument mode, the programmed steps will be sent to the machine. All worklists should first be validated in simulation mode. </p> </li> <li> <p>Click the \u201c\u2026\u201d button to browse and select the appropriate worklist file for the experiment. Once the file is loaded, the \u201cRun\u201d button will become active. Click \u201cRun\u201d to begin the simulation.</p> <p>Note</p> <p>The worklist file must be a .csv file that ends with worklist.csv. If the file is of another type, the Hamilton software will not recognize it. </p> <p>Developer notes: The Hamilton Method was developed in collaboration with the Hamilton Apps team. It inputs a *worklist.csv file where each row in the document corresponds to one robot step. The method file is intended to be flexible for a range of experimental designs. More information about this document, called a \u201cworklist\u201d can be found in the RADA tab.</p> <p> Figure 6. Pop-up window once the method is started. Load the worklist file from a location on the local machine. Animation can be selected or deselected depending on operator preference. Click the \u201cRun\u201d button to start the operation.</p> </li> <li> <p>When the tip counters appear, update the count for each tip type by clicking on the first available tip in each rack. Note that insufficient virtual tips will cause the method to error. For simulation runs, best practice is to fill all positions for each tip type. This helps determine the total number of tips required for the actual experiment. Once all tip counts are updated, click \u201cOK\u201d to proceed.</p> <p> Figure 7. Example pop-up windows that appear to indicate what tips are present on the deck. Make sure enough tips are loaded virtually to cover the steps written in the worklist. This can be checked in Simulation Mode.</p> </li> <li> <p>Run simulation and observe for any potential errors. </p> <p>Note</p> <ul> <li>Errors in the worklist can prevent the method from running to completion, and a notification will appear with information to fix the error. </li> <li>Common errors include having the wrong liquid class for the volume or dispense type selected, choosing a location that doesn\u2019t exist on the deck, or having incorrect group numbering. Other errors will allow the worklist to run without errors but still indicate a problem with the worklist. These errors are typically due to incorrectly noting the plate or well number on the deck. More information about these errors can be found in the Troubleshooting section.</li> <li>There are a few different windows that can be present during simulation.  It is recommended to focus on the \u201cInstrument\u201d window and the \u201cTraces\u201d window. These two windows will allow the operator to see what is happening and identify the cause of any potential error.  </li> </ul> <p>Note: The other optional windows that can be included in the simulation view are the \u201cActivities\u201d and \u201cScheduler\u201d windows, however these are not useful for the current methods.</p> <ul> <li>The length of the simulation will depend on the type and number of steps included in the worklist. </li> </ul> <p> Figure 8. Run Control when the method is running.</p> </li> <li> <p>Verification and troubleshooting: </p> <ul> <li>If the method runs successfully, a \u201cMethod Complete\u201d message will appear. If there are issues, an error message will be displayed.    </li> <li>Note the error and open the logfile to get more information. Once the issue has been identified, refer to the DROP Troubleshooting: Quick Guide document for common problems and how to fix them. </li> </ul> </li> <li>Note the plate and tip locations. <ul> <li>If the run is completed successfully, note the location of the plates and tips used. </li> <li>It is recommended to take a screenshot and save it into a virtual laboratory notebook to assist with experimental set up. </li> </ul> </li> </ol> <p> Figure 9. Example screenshots of methods run on the Hamilton Method. An ideal screenshot will show both the number of tips used and the plate locations that are required.</p>"},{"location":"NAAT/NAAT%20Protocols/#run-experiment","title":"Run Experiment","text":"<ol> <li>Before running an experiment, it is recommended to run daily maintenance. To do so, launch the Instrument Maintenence Program and follow the step by step instructions provided. </li> <li>If required, turn on the cooling pump at least 1 hour before the experiment to ensure that the carreirs have reached the required temperature. Make sure there is enough liquid in the chiller. </li> <li>Wipe down the deck with an appropriate cleaning solution. </li> <li>Add a new biohazard bag intot he waste container. </li> <li>Ensure there are no potential obstructions to the movement of the channels. </li> <li>Set up labware according to the deck layout as required by the corresponding Layout and Worklist files. </li> <li>Load pipette tips into their respective locations. The number of tips required can be determined from the simulation run. </li> <li>Load all reagents and materials onto the deck. Verify that each piece of labware fits correctly. </li> <li>Close the front shield of the instrument and verify there is no interference nearby. </li> <li>Open VENUS software and return to the Home Page in the Navigation Bar. Load the method by selecting the shortcut or by choosing from \"Run History\". </li> <li> <p>Confirm that VENUS software is in insturment mode by noting the name listed next to \"Instrument\" in the Run Control Window. </p> <p> Figure 10. The view in Run Control when an experiment has been started in instrument mode. Note the machine\u2019s ID to ensure that the system is connected to the Hamilton STAR.</p> </li> <li> <p>Select the blue play button to begin the run. </p> </li> <li> <p>The pop up shown in figure 6 will appear. Select the worklist file that corresponds to the experiment and select \"Run\". </p> <p>Note</p> <p>The method can be run with or without animation when in instrument mode. </p> </li> <li> <p>Using insights from the simulation run, , confirm the number of tips required for the experiment. Update the tip count for each tip type by selecting the first available tip in each rack. Be precise\u2014accurate tip counts are essential for successful execution. Once all tip counts are updated, click \u201cOK\u201d to proceed.</p> </li> <li> <p>Run the method, monitor the instrument and/or the trace for any potential errors. For first-time runs of a new worklist, remain near the instrument to respond quickly in case of any incidents. If a problem occurs, use the \u201cPause\u201d or \u201cAbort\u201d buttons in the Run Control window to stop or interrupt the process safely.</p> <p>Note</p> <p>Make sure there are enough pipette tips on the deck for the experiment programmed. The system will not notice that there are not enough tips until it runs out.   </p> </li> <li> <p>If an error message appears, refer to the Troubleshooting section for assistance. </p> </li> <li>Clean up:<ul> <li>Remove all consumables except for tips from the deck. </li> <li>Seal all plates (especially any plates containing template) and place immediately in biohazard. </li> <li>Remove biohazard bag, tie, and place immediately in biohazard bin. </li> <li>Spray down deck with ethanol and/or bleach (experiment/sample dependent)</li> <li>Clean up any spills and debris, as necessary. </li> <li>Turn off the cooling pump if used. </li> </ul> </li> </ol> <p>General Precautions</p> <ul> <li>Do not insert arms and hands when the robot is running. </li> <li>Do not switch tubes around once processing has begun. </li> <li>Do not reuse tips that have been discarded into the waste.</li> <li>Do not empty the tip waste while the instrument is running. </li> <li>Do not leave tips on the pipetting channels for extended periods (such as overnight).</li> <li>Shield the instrument from direct sunlight or intense artificial light. </li> <li>Do not place anything on the deck higher than 145mm above the deck\u2019s surface.</li> <li>Close the front cover during the run. The front cover is monitored by software and will abort the method if left open. </li> <li>Low volume (10\u00b5L) tips do not reach the deck or the bottom of sample tubes in standard sample carriers</li> <li>Load tips correctly. 50\u00b5L and 300\u00b5L tips have the same shoulder height and cannot be used interchangeably.</li> <li>Depending on the assay, certain chemistries are more stable on the deck when stored at 4\u00b0C than others. Additional chemistry specific testing may be required. </li> </ul>"},{"location":"NAAT/NAAT%20Protocols/#testing-for-contamination","title":"Testing for Contamination","text":"<p>If you suspect contamination in your Hamilton Star liquid handling robot:</p> <ol> <li>Stop the operation: Immediately halt any ongoing processes to prevent further contamination.</li> <li>Identify the source: Determine where the contamination might have occurred (i.e., from the liquid samples, pipette tips, the environment, etc).</li> <li>Clean the system:<ul> <li>Pipette tips: Replace all pipette tips; discard the contaminated ones and use new, sterile tips.</li> <li>Deck and surfaces: Clean all surfaces of the robot, including the deck and any other areas that might have come into contact with the contaminating material. Use cleaning agent appropriate to the contaminating material (refer to section 9.6 of DROP SOP-001)</li> </ul> </li> <li>Check for residual contamination: After cleaning, run a test with no template control or NTC for NAAT, or blank reactions inside the system to ensure that the contamination has been fully removed.</li> <li>Prevent future contamination:<ul> <li>Regular maintenance: Perform regular maintenance and cleaning as recommended by Hamilton.</li> <li>Proper handling: Ensure that all samples and reagents are handled properly to avoid introducing contaminants.</li> <li>Environmental controls: Maintain a clean working environment to minimize the risk of contamination.</li> </ul> </li> </ol> <p>If the contamination persists or unsure about any steps, contact Hamilton\u2019s technical support for further assistance.</p> <p> [1] https://www.jmp.com/en/statistics-knowledge-portal/design-of-experiments </p>"},{"location":"NAAT/Thermocycler%20Analysis/","title":"Thermocycler Analysis","text":"<p>This document outlines the process for analyzing thermocycler data generated from nucleic acid amplification tests (NAAT). The provided code is optimized for handling large batch datasets, typically produced by the NAAT system. It has been developed and validated using data exported from Bio-Rad software. While the current implementation is tailored to Bio-Rad outputs, additional development may be necessary to support data from other thermocycler platforms. Importantly, the software described here can also be applied to thermocycler data generated outside the context of RoboNAAT.</p> <p>Traditional analysis for thermocycler data analyzes one 96 or 384 well plate at a time. Background subtraction and amplification threshholds are deteremined automatically using the software associated with the machine. </p> <p>We sought to develop code that can analyze many plates at once. This presented unique challenges, as the automatically set threshold does not always apply to experiments where many variables are changing at once. Therefore, this code takes the raw fluorescence data from the thermocycler, generates a sigmoidal logistic function fit to the data, and outputs the variables of interest for analysis. The sigmoidal logistic function is based on Goll et al 2006</p>"},{"location":"NAAT/Thermocycler%20Analysis/#software-requirements","title":"Software requirements","text":"<p>To operate the thermocycler data analysis code, Python and Jupyter notebook are required. Instructions on how to install Jupyter notebook on a Windows machine can be found here - https://www.geeksforgeeks.org/how-to-install-jupyter-notebook-in-windows/</p>"},{"location":"NAAT/Thermocycler%20Analysis/#files-included-in-github-repo","title":"Files included in Github Repo","text":"<p> - Thermocycler Analysis Code</p> <p>Jupyter Notebooks: these are the files that the operator will open to run the analysis code</p> <ul> <li>Batch Plate Analyzer.ipynb </li> <li>Single Plate Analyzer.ipynb</li> </ul> <p>Python file(s): Python files that the Jupyter notebook refers to in order to analyze data. Some additional functions are present in these files beyond what is included in the Jupyter notebook file and can be updated if desired.</p> <ul> <li>PlateAnalyzer.py</li> <li>PlateAnalyzer-partial.py</li> </ul>"},{"location":"NAAT/Thermocycler%20Analysis/#important-values","title":"Important Values","text":"<p> Figure 1. Graphical representation of the Quantities of Interest (QOI) calculated by the Plate Analyzer code. More information about each of these variables can be found below. </p>"},{"location":"NAAT/Thermocycler%20Analysis/#fitting-model-and-quantities-of-interest-qoi","title":"Fitting Model and Quantities of Interest (QOI)","text":"<p>This section provides background on the fitting model and the key quantities calculated by the Plate Analyzer Code.</p> <p>Input:</p> <ul> <li> <p>Raw fluorescence data from a thermocycler </p> <p>Note</p> <p>Use data that has not been background-subtracted to preserve the integrity of the fitting process.</p> </li> </ul> <p>Outputs:</p> <p>The PlateAnalyzer.py generates a model fit to the raw data for every well and fluorophore in thermocycler export. From this model fit, five parameters will be generated for every curve. These five parameters are:</p> <ul> <li>F_max: Maximum fluorescence for that curve</li> <li>C_half: Cycle number that is halfway between the time that exponential amplification starts and when it ends </li> <li>k: Slope constant that relates to amplification efficiency</li> <li>F_b: Background fluorescence for that curve </li> <li>DriftSlope: Drift of the slope that can occur as an experiment progresses. Enables background subtraction similar to how the thermocycler program background subtracts. </li> </ul> <p>Identifies the following quantities of interest (QOI): A graphical description of each of these factors is shown in Figure 1. </p> <ul> <li>F_0: Starting fluorescence.</li> <li>F_1: Fluorescence value when exponential amplification begins. </li> <li>F_2: Fluorescence value when exponential amplification stops.</li> <li>F_max: Maximum fluorescence for that curve.</li> <li>deltaF: Change in fluorescence values between F_max and F_0.</li> <li>R2_score: Coefficient of determination for the model fit. Higher value = model fit that is a good representation of the raw data. </li> <li>C_half: Cycle number that is halfway between the time that exponential amplification starts and when it ends.</li> <li>dFdC_half: Slope of the amplification curve at C_half.</li> <li>C_lift: Cycle number at which exponential amplification begins. </li> <li>C_slow: Cycle number at which exponential amplification stops. </li> <li>deltaC: C_slow minus C_lift. Indicates how quickly a reaction plateaued. </li> </ul> <p>Note</p> <p>This list includes more information than we think is necessary for interpretation of a NAAT experiment, but we have retained the outputs in case they become useful for future chemistries or experimental designs. </p>"},{"location":"NAAT/Thermocycler%20Analysis/#module-options","title":"Module Options","text":"<p>There are three different notebooks in the NAAT Thermocycler Analysis folder that process different types of plates. Information about each of these is included below. All three use the same backend code to analyze the thermocycler wells, the differences are in how the analysis files are identified and what the graphical output looks like. </p> <p> Figure 2. The Thermocycler Analysis code has three notebook options that all use the same backend analysis. The difference between the three is whether it\u2019s a single plate, a group of plates, or a partial plate. </p>"},{"location":"NAAT/Thermocycler%20Analysis/#analyzing-thermocycler-data","title":"Analyzing Thermocycler Data","text":"<ol> <li>Export raw data as .xlsx from thermocycler.      For optimal results, remove background subtraction before exporting. The file to be analyzed is the Quantification Amplification Result file. The analysis file should be structured so each sheet contains the fluorescence reads for each fluorophore measured. Within each sheet the columns corresponds to well IDs and the rows are cycle numbers.</li> <li>Load analysis code into a new folder. </li> <li>Save the Quantification Amplification Result file into your analysis folder. </li> <li>Launch the Jupyter Notebook and navigate to your analysis folder.</li> <li>Open the Notebook. A new tab will open in your default web browser showing the Jupyter Notebook interface.</li> <li>Navigate to the directory where the Jupyter Notebook file is located.      Notebook options are Single Plate Analyzer, Batch Plate Analyzer, and Partial Plate Analyzer. More information about each of these can be found in the Module Options section below. </li> <li> <p>Select the relevant .ipynb file.</p> <p> Figure 3. Example of Notebook view for Single Plate Analyzer. </p> </li> <li> <p>Run each kernel:</p> <ul> <li>Run one Kernel at a time by selecting the Kernel and pressing Shift + Enter or by selecting the \u201cRun\u201d button on the toolbar. </li> <li>When a Kernel is running, a [*] will appear next to \u201cIn\u201d on the left-hand side. Once it is complete there will be a number that appears inside the brackets. </li> </ul> <p>Note</p> <p>Make sure to run the Kernels in order. The analysis will not complete successfully if they are run out of order. </p> </li> <li> <p>Review output: In the analysis folder, the following files will be generated</p> <ul> <li>Individual CSV file for each plate containing quantities of interest (QOIs) for each well and fluorophore.</li> <li>Individual CSV file for each plate containing model fit parameters for each well and fluorophore.</li> <li>PDF with individual amplification curves in the shape of the plate for each fluorophore in the raw data file.</li> </ul> <p> Figure 4. Example images of files generated by all three of the Jupyter Notebooks. </p> </li> <li> <p>Save your work: Remember to save your work frequently by clicking the save icon or pressing Ctrl + S. </p> </li> <li>Shut down the notebook: When you are done, you can shut down the notebook by closing the browser tab and stopping the Jupyter server in your terminal by pressing Ctrl + C. </li> </ol>"},{"location":"Web%20App/Manual%20Worklist%20Generation/","title":"Manual Worklist Generation","text":""},{"location":"Web%20App/Manual%20Worklist%20Generation/#define-experiment-details","title":"Define experiment details","text":"<p>Specify the number of assay steps, timing delays between steps, reagent types and reagent volumes required for each step. This includes addition of antibodies, addition of sample, addition of running buffer, and LFA imaging. These parameters are used to populate  the following columns in the worklist: \u2018step\u2019, \u2018volume_ul\u2019, \u2018liquid_class\u2019, \u2018timer_delta\u2019, \u2018source\u2019, \u2018step_index\u2019, \u2018group_number\u2019, \u2018timer_group_check\u2019.</p>"},{"location":"Web%20App/Manual%20Worklist%20Generation/#determine-experiment-hardware","title":"Determine experiment hardware","text":"<p>Based on the total volume of each reagent type, determine the appropriate hardware plate to hold each reagent, and layout reagents accordingly. Include an additional 30% volume to account for losses during pipetting. Reagents with volumes \u2265 200 uL should be placed in a 96 deep well plate, those with volumes &lt; 200 uL in a 96 well plate, and those with volumes &lt; 100 uL in a 384 well plate. This information is use to populate the \u2018from plate\u2019 and \u2018from_well\u2019 columns in the worklist .csv file.</p> <p>Identify the appropriate custom LFA-hardware based on the assay architecture (i.e, LFA strips with or without cassette). Measure and note the precise pipetting and/or imaging locations. This information is used to populate \u2018dx\u2019, \u2018dz\u2019, \u2018to_plate\u2019, and \u2018to_well\u2019 columns in the worklist .csv file.</p>"},{"location":"Web%20App/Manual%20Worklist%20Generation/#prepare-worklist","title":"Prepare worklist","text":"<p> Figure 1. Example worklist, with corresponding column headers and each step indicated by a single row. </p> <p>Generate the \"...worklist.csv\" file by translating the calculated reagent volumes and plate layouts into line-by-line commands. Ensure that each step is accurately represented in the worklist format. Refer to the definitions provided in the Glossary to confirm that all required information are included in the file.</p>"},{"location":"Web%20App/Manual%20Worklist%20Generation/#validate-worklist","title":"Validate worklist","text":"<p>Test the worklist in simulation mode, closely monitoring the execution of each command to ensure accuracy. Revise and iterate as needed based on observed discrepancies or errors.</p>"},{"location":"Web%20App/RADA%20Admin%20Capabilities/","title":"Admin Capabilities","text":"<p>The web application has been designed to minimize the need to re-deploy the application whenever smaller experimental or engineering changes are made to the DROP system. Specific variables required to make the worklist can be generated/modified by admin level accounts in the RADA application. </p> <p>The web application should be deployed as described here -  Deployment Repo</p>"},{"location":"Web%20App/RADA%20Admin%20Capabilities/#adding-removing-modifying-users","title":"Adding, removing, modifying users","text":"<p>Once the web application has been deployed, users can be added to the web application at three different levels. Admin, supervisor, and user. Admin users have access to the \"Settings\" page under which the advanced actions described below can be completed. They can also view/modify experiments made by other Admins, Supervisors, and Users. Supervisors can make experiments and modify experiments made by other users. Users are able to make and modify only their own experiments. </p> <p> Figure 1. Page to add, edit, and delete users from RADA application. </p> <p>New users can be added using the \"+ Add User\" button on the upper right. Once added, the user will receive an email with instructions on how to sign up for the application. </p> <p>Users can be modified at any time with respect to their role. They can also be removed as needed. </p>"},{"location":"Web%20App/RADA%20Admin%20Capabilities/#making-experimental-presets","title":"Making experimental presets","text":"<p>The RADA web application has the option to add experimental presets. The app comes preloaded with just a few NAAT presets, but more presets can be added by an admin at any time. </p> <p>Presets are intended to simplify the workflow for protocols that are run repeatedly on the DROP system. The presets made will appear under the \"New Experiment\" drop down. </p> <p> Figure 2. Example presets for experiments in RADA. </p>"},{"location":"Web%20App/RADA%20Admin%20Capabilities/#modifications-to-liquid-types","title":"Modifications to Liquid Types","text":"<p>Liquid types in the RADA application correspond to liquid classes defined in the Hamilton CO-RE Liquid Editor. The web application only needs a few pieces of information, th ename, value (corresponding to the name in the liquid class) and whether the liquid requires tip washing. Tip washing is recommended for liquids that are highly viscous or may otherwise stick to the inside of the pipette. </p> <p> Figure 3. Page to add, edit, and delete liquid types from RADA application. </p> <p>The web application will take the \"Value\" field and make liquid classes for all three pipette size (50, 300, 1000) and both dispense types (Jet Empty and Surface Empty) used on DROP. When adding new liquid types to RADA, ensure that those liquid classes have been made and validated on the Hamilton STAR to ensure pipetting performance. </p>"},{"location":"Web%20App/RADA%20Admin%20Capabilities/#modifications-to-volume-units","title":"Modifications to Volume Units","text":"<p>Volume units are not used by the backend of the RADA application, but can be helpful for documentation and tracing purposes. Some units have been prepopulated in the application, but others can be added as needed. </p> <p> Figure 4. Page to add, edit, and delete units from RADA application. </p>"},{"location":"Web%20App/RADA%20Admin%20Capabilities/#modifications-to-deck-layout","title":"Modifications to Deck Layout","text":"<p>Multiple deck layouts can be loaded for both the NAAT and the LFA worklist generator. For each deck layout, there are 15 deck locations available onto which different plate options can be loaded. </p> <p> Figure 5. Page to add, edit, and delete plates from deck layout in RADA application. </p> <p>Note</p> <p>The loaded plate options MUST correspond to plate locations in the Hamilton Layout file being run.</p> <p>For each plate position, the user must input the number of wells, well shape, and holdover volume factor. Holdover volume is used to make calculations for the dead volume required. Different plates, depending on their material, shape, and dimensions, will have different holdover volumes. This is best determined through experimentation. </p>"},{"location":"Web%20App/RADA%20Admin%20Capabilities/#modifications-to-assay-configuration-plates-lfa-only","title":"Modifications to Assay Configuration Plates (LFA only)","text":"<p>LFA experiments in the RADA application rely on reagent plates, which are the plates that hold the cassettes or strips. Assay configuration plates have given dimensions and locations for pipetting and imaging. </p> <p>New configurations can be added as needed. Each configuration requires:</p> <ul> <li>Plate prefix: used in the naming convention on the Hamilton Layout</li> <li>Device type: Cassette or strip </li> <li>Number of plates: Should correspond to how many of the plates fit on the deck. This will typically be a number between 1 and 15. </li> <li>Rows: Number of rows onto which cassettes or strips fit on the plate </li> <li>Columns: Number of columns onto which cassettes or strips fit on the plate </li> <li>Max cassettes per plate: Typically will be the same number as rows x columns. </li> <li>Max cassettes per deck: Typically will be the max cassettes per plate x number of plates. </li> <li>Locations: these locations correspond to the spots where pipetting and/or imaging should take place. This can be determined empirically based on the strip dimensions but should also be validated experimentally before a real experiment is run. Each location has a dx and a dz value that correspond to the shift in the x and z directions from the origin of the strip. </li> </ul> <p> Figure 6. Page to add, edit, and delete assay configuration plates in RADA application. </p>"},{"location":"Web%20App/RADA%20Overview/","title":"Overview","text":""},{"location":"Web%20App/RADA%20Overview/#robotic-assay-development-application-rada","title":"Robotic Assay Development Application (RADA)","text":"<p>The Robotic Assay Development Application (RADA) was developed to reduce the barrier for entry for users of the DROP system. </p> <p>Key features:</p> <ul> <li>AWS based web application with a built in database</li> <li>Ability to sort by experiment, user, and date created</li> <li>Ability to copy and edit experiments for maximum efficiency</li> <li>Informational icons to support users through unfamiliar jargon</li> <li>Admin functionalities including:<ul> <li>Adding new users and changing visibility levels</li> <li>Adjusting liquid classes, hardware, and deck layouts</li> <li>Load experiment presets </li> </ul> </li> <li>Quality assurance tested</li> </ul>"},{"location":"Web%20App/RADA%20Overview/#deployment-instructions","title":"Deployment instructions","text":"<p> - RADA App Frontend  - RADA App Backend  - RADA App Deployment </p> <p>There are three different Github repositories (repos) associated with RADA, the frontend, backend, and deployment. All three are required to deploy the web application. The Deployment Repo contains all necessary information to deploy the RADA web app. </p> <p>  Figure 1. Description  </p>"},{"location":"Web%20App/RADA%20Overview/#user-workflow","title":"User workflow","text":"<ol> <li>Input experiment or edit from existing experiment or preset</li> <li>Download worklist file for input into Hamilton Method</li> <li>View robot instructions to load deck</li> <li>Run experiment in simulation </li> <li>Run experiment on machine and upload results </li> </ol>"},{"location":"Web%20App/RADA%20Overview/#advanced-admin","title":"Advanced (admin)","text":"<ol> <li> <p>Adding, removing, modifying users </p> </li> <li> <p>Making experimental presets </p> </li> <li> <p>Modifications to Liquid Types</p> </li> <li> <p>Modifications to Volume Units</p> </li> <li> <p>Modifications to Deck Layout</p> </li> <li> <p>Modifications to Reagent Plates (LFA only)</p> </li> </ol> <p>RADA was developed in close partnership with a team from Neurosynaptic Communications. Contact their team for any additional scope of work that may be desired for future versions of RADA. </p> <p>Older versions of the web application and related code can be found at these links:</p> <ul> <li>Original Web Application</li> <li>Python code to generate LFA worklists</li> </ul>"},{"location":"Web%20App/RADA%20User%20Experience/","title":"User Experience","text":"<p>The RADA application features two distinct experiment tabs, one for LFA experiment and another for NAAT experiments. There are separated due to differences in the experimental design, especially regarding the addition of non-plate based hardware. Modifications can be made to widen the range of protocols that RADA can generate as needed.</p> <p> Figure 1. Home page of RADA web application. LFA and NAAT tabs contain experiments for their respective chemistries. </p>"},{"location":"Web%20App/RADA%20User%20Experience/#user-experience-lfa-experiment","title":"User Experience - LFA experiment","text":"<p>Generated LFA experiments can be found in the LFA tab. A new experiment can be generated by selecting \"New Experiment\" or by copying an existing experiment. </p>"},{"location":"Web%20App/RADA%20User%20Experience/#input-experimental-details","title":"Input experimental details","text":"<p>Fill out the information required on the \"New LFA Experiment\" page (Figure 2). </p> <p> Figure 2. Create a new LFA experiment allows the user to input information required for a given experiment. </p> <p>The items that need to be filled out include:</p> <ul> <li>Name of experiment </li> <li>Deck layout</li> <li>Assay plate configuration </li> <li>Number of technical replicates</li> <li>Option to make an experiment preset that will appear in the \"New Experiment\" drop down. </li> </ul> <p>Both the Deck Layout and Assay Plate Configuration dropdown menus are populated with predefined setups created by RADA administrators. These configurations help standardize experiment setup and ensure compatibility with automated workflows.</p> <p>Deck Layout refers to the layout of plates and tubes on the Hamilton deck. The deck layout must be consistent between the web application, the Hamilton Layout file, and the physical location of items on the Hamilton STAR.</p> <p>Assay Plate Configuration refers to the assay holder (cassette, strip, etc) corresponding to the experiment being run. </p> <p>Once the Deck Layout or Assay Plate Configuration have been selected, a preview of the selected configuration will be visible when hovering over the preview icon. </p> <p> Figure 3. Hover over the icon to preview the selected deck layout. </p> <p> Figure 4. Hover over the icon to preview the selected assay plate configuration. </p> <p>Once completed, select \"Save and Continue\". </p> <p>The next page allows the user to Configure the LFA experiment steps. The form will pop up with one step, and more steps can be added by selecting the \"Add step\" button on the bottom right. </p> <p>The information required for each step include:</p> <ul> <li>Step name.</li> <li>Liquid type to be pipetted. Select \"Imaging\" if the step is an imaging step. </li> <li>Volume to be pipetted. Note: Numbers can use decimals and are recommended to be between 1-1000uL for the current configuration. </li> <li>Time delay in seconds if a time delay is required between this and the subsequent step. </li> <li>Variable conditions for the experiment. The worklist generator will take the input variables and use a full factorial DoE to run all combinations of the input conditions. Keep an eye on the number of conditions and number of replicates to ensure that there are enough spots on the given deck layout to run the desired experiment. </li> </ul> <p> Figure 5. Screen to load LFA experiment steps. </p> <p> Figure 6. Screen with an example of loaded experiment steps. </p> <p>The order of the steps can be adjusted by using the icon with six dots on the left of the Step Name. </p> <p>Once the experiment details are finalized, select \"Save and Continue\"</p>"},{"location":"Web%20App/RADA%20User%20Experience/#download-worklist-files","title":"Download worklist file(s)","text":"<p>Worklist file can be downloaded from the \"Export Experiment\" page. This file serves as the input for controlling the Hamilton Venus run.</p> <p> Figure 7. Export Experiment Files Page. </p> <p>Note</p> <p>The downloaded file is a CSV UTF-8. The DROP method does not recognize CSV UTF-8; the downloaded worklist must be saved as a plain .csv file. </p>"},{"location":"Web%20App/RADA%20User%20Experience/#view-robot-instructions-to-load-deck","title":"View robot instructions to load deck","text":"<p>To enter the Worklist Viewer, select \"View Instructions\". This viewer contains all the information to correctly load reagents into plates and position the plates on the deck in their designated locations.</p> <p> Figure 8. Page designed to support the set up of the reagents and plates onto the Hamilton Deck. </p> <p>Once an experiment is created, it is saved in the application's built-in database. Experiments can be referenced at any time after creation and maybe modified or reloaded as needed. Additionally, completed experiments can be loaded with associated LogFiles and experimental data for further analysis or review.</p> <p> Figure 9. Experiment summary for example LFA experiment. </p>"},{"location":"Web%20App/RADA%20User%20Experience/#user-experience-naat-experiment","title":"User Experience - NAAT experiment","text":"<p>All generated NAAT experiments can be viewed in the NAAT tab. To create a new experiment, select \"New Experiment\", or duplicate an existing one using the copy option. Presets for commonly used protocols are also available in this tab to streamline setup.</p>"},{"location":"Web%20App/RADA%20User%20Experience/#input-experimental-details_1","title":"Input experimental details","text":"<p>Fill out the information required on the \"New NAAT Experiment\" page (Figure 10). </p> <p> Figure 10. Create a new NAAT experiment allows the user to input information required for a given experiment. </p> <p>The items that need to be filled out include:</p> <ul> <li>Name of experiment </li> <li>Deck layout</li> <li>Number of samples: this number should include the negative control</li> <li>Number of technical replicates </li> <li>Mastermix volume: the volume of mastermix only per reaction, not the total reaction volume</li> <li>Sample volume</li> <li>Liquid type for mastermix liquid</li> <li>Liquid type for sample liquid </li> <li>Liquid type for mixing step of mastermix (especially important if the mastermix contents are highly viscous or containing detergent)</li> <li>PCR plates size: dropdown with options for 96 and 384 wells</li> <li>Option to make an experiment preset that will appear in the \"New Experiment\" drop down. </li> </ul> <p>The Deck Layout drop down menu displays configurations created by RADA. For more details on how these configurations are managed, refer to the Admin Capabilities section.</p> <p>Once the Deck Layout has been selected, a preview of the selected configuration will be visible when hovering over the preview icon. </p> <p>Once completed, select \"Save and Continue\". </p> <p>Configure master mix components. On the next page, users can configure the steps of their NAAT experiment. Each master mix is loaded into a dedicated section, which can include as many components as needed.</p> <p>The form initially displays one master mix by default. To add additional steps, simply click the \"Add Master mix\" button located at the bottom right of the page.</p> <p>The information required for each step include:</p> <ul> <li>Master mix name</li> <li>Source name: the identity of the reagent (i.e. water, buffer, dNTPs, DNA pol, etc)</li> <li>Concentration unit: drop down menu with options for concentration value will apply to both the final and stock concentration inputs</li> <li>Final concentration desired in mastermix</li> <li>Stock concentration: starting concentration for reagent</li> <li>Liquid type to be pipetted: drop down menu that correlates with the respective liquid class</li> </ul> <p>The order in which reagents are listed determines the sequence in which they will be added by the machine. To adjust the order, use the six-dot handle on the far right of each step to drag and rearrange items as needed. Similarly, master mix sections can be reordered to match your desired workflow or protocol sequence.</p> <p> Figure 11. Screen to load NAAT experiment steps, with example information loaded. </p> <p>To reduce repetitive setup, mastermixes can be copied. This can be done by selecting the three-bar menu located in the upper right corner of the mastermix header. This feature allows for quick duplication and easy modification of existing steps.</p> <p> Figure 12. Dropdown to allow for addition of reagents to a mastermix, copy or delete the mastermix. </p> <p>Once the experiment details are finalized, select \"Save and Continue\"</p>"},{"location":"Web%20App/RADA%20User%20Experience/#download-worklist-files_1","title":"Download worklist file(s)","text":"<p>Worklist files can be downloaded from the Export Experiment page. These files are used as input for the Hamilton VENUS Run Control system.</p> <p>The NAAT worklist generator produces two separate files: Master mix Worklist \u2013 handles the mixing and aliquoting of the master mix. Sample Worklist \u2013 manages the aliquoting of the samples.</p> <p>This separation ensures precise execution and easier troubleshooting during automated runs.</p> <p> Figure 13. Export Experiment Files Page. </p> <p>Note</p> <p>The downloaded file is a CSV UTP-8 type. The DROP method does not recognize CSV UTF-8; the downloaded worklist must be saved as a plain .csv file.</p>"},{"location":"Web%20App/RADA%20User%20Experience/#view-robot-instructions-to-load-deck_1","title":"View robot instructions to load deck","text":"<p>To enter the Worklist Viewer, select \"View Instructions\". This viewer contains all the information to correctly load reagents into plates and position the plates on the deck in their designated locations.</p> <p> Figure 14. Page designed to support the set up of the reagents and plates onto the Hamilton Deck. </p> <p>The worklist viewer has five sections:</p> <ol> <li>Reagent loading section \u2013 This section lists all reagents required for the experiment, including solution name (based on user input), plate name, well number, and a check box to indicate when a reagent has been loaded. Selecting a row will highlight the corresponding locations in both the Plate Layout and Deck Layout. </li> <li>Plate Layout \u2013 Displays the layout of a given plate, 96 or 384. When selected the corresponding well will be highlighted in black. </li> <li>Deck Layout \u2013 Shows the robot's deck configuration. When a reagent is selected, the associated plate is highlighted in black, mirroring the Plate Layout behavior. </li> <li>Instructions \u2013 When a reagent row is selected, this panel provides detailed loading instructions, including: Solution name, volume to be pipetted, well and plate ID. This helps users accurately load reagents with the correct volume and location.</li> </ol>"}]}